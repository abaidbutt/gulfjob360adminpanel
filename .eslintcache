[{"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\index.js":"1","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\reportWebVitals.js":"2","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\App.js":"3","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Login.js":"4","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Deposits.js":"5","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\MenuBar.js":"6","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\dashboard\\index.js":"7","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Orders.js":"8","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Title.js":"9","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Chart.js":"10","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\routes\\index.js":"11","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\routes\\menuItems.js":"12","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\config\\index.js":"13","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\context\\AdminContext.js":"14","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\context\\AdminReducer.js":"15","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\404.js":"16","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\routes\\Index.js":"17","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\routes\\Routes.js":"18","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\theme.js":"19","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\routes\\Auth.js":"20","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Ads\\Index.js":"21","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Ads\\AdsTable.js":"22","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Ads\\AdsDel.js":"23","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Category\\Index.js":"24","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Category\\CategoryTable.js":"25","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Category\\CategoryDel.js":"26","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Ads\\AdsUpsert.js":"27","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Category\\CategoryUpsert.js":"28","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Tip\\Index.js":"29","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Tip\\TipTable.js":"30","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Tip\\TipDel.js":"31","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Tip\\TipUpsert.js":"32","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Education\\Index.js":"33","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Education\\EducationTable.js":"34","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Education\\EducationDel.js":"35","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Education\\EducationUpsert.js":"36","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Industry\\Index.js":"37","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Industry\\IndustryTable.js":"38","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Industry\\IndustryDel.js":"39","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Industry\\IndustryUpsert.js":"40","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Faq\\Index.js":"41","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Faq\\FaqTable.js":"42","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Faq\\FaqDel.js":"43","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Faq\\FaqUpsert.js":"44","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Location\\Index.js":"45","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Location\\LocationTable.js":"46","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Location\\LocationDel.js":"47","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Location\\LocationUpsert.js":"48","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Job\\Index.js":"49","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Job\\JobUpsert.js":"50","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Job\\JobTable.js":"51","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Job\\JobDel.js":"52","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Service\\Index.js":"53","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Service\\ServiceTable.js":"54","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Service\\ServiceDel.js":"55","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Service\\ServiceUpsert.js":"56","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Partner\\Index.js":"57","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Partner\\PartnerUpsert.js":"58","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Partner\\PartnerTable.js":"59","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Partner\\PartnerDel.js":"60","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Package\\Index.js":"61","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Package\\PackageTable.js":"62","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Package\\PackageDel.js":"63"},{"size":1051,"mtime":1613389083902,"results":"64","hashOfConfig":"65"},{"size":362,"mtime":499162500000,"results":"66","hashOfConfig":"65"},{"size":1904,"mtime":1613380315167,"results":"67","hashOfConfig":"65"},{"size":4335,"mtime":1613381833995,"results":"68","hashOfConfig":"65"},{"size":880,"mtime":1612594037362,"results":"69","hashOfConfig":"70"},{"size":3268,"mtime":1613377998744,"results":"71","hashOfConfig":"65"},{"size":5974,"mtime":1613385704479,"results":"72","hashOfConfig":"65"},{"size":3664,"mtime":1612952600191,"results":"73","hashOfConfig":"65"},{"size":423,"mtime":1612859119944,"results":"74","hashOfConfig":"65"},{"size":1790,"mtime":1612604709341,"results":"75","hashOfConfig":"65"},{"size":1608,"mtime":1613040496808,"results":"76","hashOfConfig":"65"},{"size":5060,"mtime":1613323689092,"results":"77","hashOfConfig":"65"},{"size":200,"mtime":1612787149069,"results":"78","hashOfConfig":"65"},{"size":4328,"mtime":1613381556026,"results":"79","hashOfConfig":"65"},{"size":1306,"mtime":1613383409792,"results":"80","hashOfConfig":"65"},{"size":1666,"mtime":1612886373952,"results":"81","hashOfConfig":"65"},{"size":5266,"mtime":1613379995006,"results":"82","hashOfConfig":"65"},{"size":3154,"mtime":1613371940436,"results":"83","hashOfConfig":"84"},{"size":2301,"mtime":1613044571368,"results":"85","hashOfConfig":"65"},{"size":344,"mtime":1613053949810,"results":"86","hashOfConfig":"84"},{"size":3577,"mtime":1613381679040,"results":"87","hashOfConfig":"65"},{"size":1878,"mtime":1613380101304,"results":"88","hashOfConfig":"65"},{"size":1357,"mtime":1613380056044,"results":"89","hashOfConfig":"65"},{"size":3406,"mtime":1613381694918,"results":"90","hashOfConfig":"65"},{"size":1823,"mtime":1613380118930,"results":"91","hashOfConfig":"65"},{"size":1385,"mtime":1613380606361,"results":"92","hashOfConfig":"65"},{"size":6603,"mtime":1613389419301,"results":"93","hashOfConfig":"65"},{"size":5162,"mtime":1613388052202,"results":"94","hashOfConfig":"65"},{"size":3498,"mtime":1613381794196,"results":"95","hashOfConfig":"65"},{"size":1910,"mtime":1613380249891,"results":"96","hashOfConfig":"65"},{"size":1368,"mtime":1613380646277,"results":"97","hashOfConfig":"65"},{"size":6932,"mtime":1613388127897,"results":"98","hashOfConfig":"65"},{"size":3416,"mtime":1613381712298,"results":"99","hashOfConfig":"65"},{"size":1864,"mtime":1613380136948,"results":"100","hashOfConfig":"65"},{"size":1388,"mtime":1613380597700,"results":"101","hashOfConfig":"65"},{"size":4611,"mtime":1613388004282,"results":"102","hashOfConfig":"65"},{"size":3411,"mtime":1613381731257,"results":"103","hashOfConfig":"65"},{"size":1858,"mtime":1613380161382,"results":"104","hashOfConfig":"65"},{"size":1385,"mtime":1613380586817,"results":"105","hashOfConfig":"65"},{"size":4609,"mtime":1613388084931,"results":"106","hashOfConfig":"65"},{"size":3499,"mtime":1613381721680,"results":"107","hashOfConfig":"65"},{"size":1910,"mtime":1613380148812,"results":"108","hashOfConfig":"65"},{"size":1364,"mtime":1613380592663,"results":"109","hashOfConfig":"65"},{"size":6946,"mtime":1613388076260,"results":"110","hashOfConfig":"65"},{"size":3410,"mtime":1613381751743,"results":"111","hashOfConfig":"65"},{"size":1834,"mtime":1613380184594,"results":"112","hashOfConfig":"65"},{"size":1384,"mtime":1613380624731,"results":"113","hashOfConfig":"65"},{"size":5235,"mtime":1613388139230,"results":"114","hashOfConfig":"65"},{"size":3616,"mtime":1613381742994,"results":"115","hashOfConfig":"65"},{"size":18606,"mtime":1613385321212,"results":"116","hashOfConfig":"65"},{"size":2004,"mtime":1613380175946,"results":"117","hashOfConfig":"65"},{"size":1333,"mtime":1613380619392,"results":"118","hashOfConfig":"65"},{"size":3541,"mtime":1613381783481,"results":"119","hashOfConfig":"65"},{"size":1934,"mtime":1613380231593,"results":"120","hashOfConfig":"65"},{"size":1383,"mtime":1613380640699,"results":"121","hashOfConfig":"65"},{"size":8601,"mtime":1613388131964,"results":"122","hashOfConfig":"65"},{"size":3503,"mtime":1613381773362,"results":"123","hashOfConfig":"65"},{"size":5760,"mtime":1613388134355,"results":"124","hashOfConfig":"65"},{"size":1822,"mtime":1613380219531,"results":"125","hashOfConfig":"65"},{"size":1379,"mtime":1613380635908,"results":"126","hashOfConfig":"65"},{"size":3603,"mtime":1613325646584,"results":"127","hashOfConfig":"84"},{"size":1842,"mtime":1613214054244,"results":"128","hashOfConfig":"84"},{"size":1385,"mtime":1613138428963,"results":"129","hashOfConfig":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"16yfq6k",{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"132"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"1s5u8cz",{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"132"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"132"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"132"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"156","messages":"157","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"132"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"132"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"7ilcgh",{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"132"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"132"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"132"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"132"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"132"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"132"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"132"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"132"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"132"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"132"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"132"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"132"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"132"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"132"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"132"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"132"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"132"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"132"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"132"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"132"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"132"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"132"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"132"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"132"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"132"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"132"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"132"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"132"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"132"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\index.js",[],["293","294"],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\reportWebVitals.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\App.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Login.js",["295","296"],"import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  FormHelperText,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { LockOutlined } from \"@material-ui/icons\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { BaseUrl } from \"../config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { AdminContext } from \"../context/AdminContext\";\r\n\r\n\r\nexport default function Login() {\r\n  \r\n  const { loginUser } = useContext(AdminContext);\r\n  const [msg, setMsg] = useState(null);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onSubmit\",\r\n    reValidateMode: \"onChange\",\r\n    defaultValues: {},\r\n    resolver: undefined,\r\n    context: undefined,\r\n    criteriaMode: \"firstError\",\r\n    shouldFocusError: true,\r\n    shouldUnregister: true,\r\n  });\r\n\r\n  const handleLogin = (data) => {\r\n    console.log(data);\r\n    new Promise((rsl, rej) => {\r\n      loginUser(`${BaseUrl}/admin-login`, data, rsl, rej);\r\n    })\r\n      .then((res) => {\r\n        history.push(\"/admin\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlined />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Admin Panel Log In{\" \"}\r\n        </Typography>\r\n\r\n        <form className={classes.form} onSubmit={handleSubmit(handleLogin)}>\r\n          <div className={classes.input}>\r\n            <TextField\r\n              autoFocus\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              inputRef={register({\r\n                required: \"This Field is Required\",\r\n              })}\r\n              error={errors.email ? true : false}\r\n            />\r\n\r\n            <FormHelperText error>{errors.email?.message}</FormHelperText>\r\n          </div>\r\n          <div className={classes.input}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              inputRef={register({\r\n                required: \"This Field is Required\",\r\n              })}\r\n              error={errors.password ? true : false}\r\n            />\r\n\r\n            <FormHelperText error>{errors.password?.message}</FormHelperText>\r\n          </div>\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Log In\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n            <Link to=\"#\" variant=\"body2\">\r\n            Forgot password?\r\n            </Link>\r\n            </Grid>\r\n            <Grid item>\r\n            <Link to=\"/\" variant=\"body2\">\r\n            {\"Don't have an account? Sign Up\"}\r\n            </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"GulfJobs360\"}{\" \"}\r\n      <Link color=\"inherit\" to=\"/\">\r\n        View Website\r\n      </Link>\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8 * 2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    background: \"white\",\r\n    padding: \"25px\",\r\n    borderRadius: \"25px\",\r\n  },\r\n  input:{\r\n    marginTop:theme.spacing(2)\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Deposits.js",[],["297","298"],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\MenuBar.js",["299","300"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Collapse,\r\n  ListItemIcon,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { menuItems } from \"../routes/menuItems\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"block\",\r\n\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  links: {\r\n    textDecoration: \"none\",\r\n    \"&:active\": {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n  dense: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n  primary: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(3),\r\n  },\r\n}));\r\nexport default function MenuBar() {\r\n  const classes = useStyles();\r\n  const [menu, setMenu] = useState({});\r\n  const [selectedIndex, setSelectedIndex] = useState(\"\");\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n  const handleClick = (item) => {\r\n    const menuchange = { ...menu, [item]: !menu[item] };\r\n    setMenu(menuchange);\r\n  };\r\n\r\n  const handler = (children) => {\r\n    return children?.map((subOption, index) => {\r\n      if (!subOption.children) {\r\n        return (\r\n          <div key={index}>\r\n            <Link to={subOption.url} className={classes.links}>\r\n              <ListItem\r\n                className={classes.dense}\r\n                dense\r\n                button\r\n                key={subOption.name}\r\n                selected={selectedIndex === subOption.select}\r\n                onClick={(event) =>\r\n                  handleListItemClick(event, subOption.select)\r\n                }\r\n              >\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  edge=\"start\"\r\n                  size=\"medium\"\r\n                  className={classes.button}\r\n                >\r\n                  {subOption.icon}\r\n                </IconButton>\r\n                <ListItemText\r\n                  primary={subOption.name}\r\n                  className={classes.primary}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <div key={index}>\r\n          <ListItem\r\n            button\r\n            dense\r\n            className={classes.dense}\r\n            onClick={() => handleClick(subOption.name)}\r\n            selected={selectedIndex === subOption.select}\r\n          >\r\n            <IconButton\r\n              color=\"primary\"\r\n              edge=\"start\"\r\n              size=\"medium\"\r\n              className={classes.button}\r\n            >\r\n              {subOption.icon}\r\n            </IconButton>{\" \"}\r\n            <ListItemText primary={subOption.name} />\r\n            {menu[subOption.name] ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={menu[subOption.name]} timeout=\"auto\" unmountOnExit>\r\n            {handler(subOption.children)}\r\n          </Collapse>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\">{handler(menuItems)}</List>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\dashboard\\index.js",["301","302"],"import React, { useContext, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Menu, ChevronLeft, ExitToApp } from \"@material-ui/icons\";\r\n\r\nimport MenuBar from \"../../components/MenuBar\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"GulfJobs360 \"}\r\n      <Link color=\"inherit\" to=\"/\">\r\n        View Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function Dashboard({ children }) {\r\n  const history = useHistory();\r\n  const { logoutUser } = useContext(AdminContext);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const handleLogout = () => {\r\n    logoutUser();\r\n    history.push(\"/admin/login\");\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={classes.appBar}\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            GulfJobs360\r\n          </Typography>\r\n          <IconButton color=\"inherit\" onClick={handleLogout}>\r\n            <ExitToApp />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeft />\r\n          </IconButton>\r\n          <img\r\n            src={`${process.env.PUBLIC_URL}/assets/img/gulfblacklogo.png`}\r\n            width={drawerWidth / 2}\r\n          />\r\n        </div>\r\n\r\n        <MenuBar />\r\n      </Drawer>\r\n      <main className={clsx(classes.content, open && classes.contentShift)}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>{children}</Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    // justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    overflowY: \"auto\",\r\n    width: drawerWidth,\r\n    // height:'100vh',\r\n    // paddingTop:theme.spacing(0),\r\n    // paddingBottom:theme.spacing(0),\r\n\r\n    display: \"block\",\r\n\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    marginLeft: drawerWidth / 4,\r\n    width: `calc(100% - ${drawerWidth / 3}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  contentShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  container: {\r\n    // paddingTop: theme.spacing(0),\r\n    // paddingBottom: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    // overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    \r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n  },\r\n}));\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Orders.js",["303","304"],"import React, { useEffect, useContext, useCallback } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Box,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport Title from \"./Title\";\r\nimport { AdminContext } from \"../context/AdminContext\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  title: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\nexport default function Orders() {\r\n  const classes = useStyles2();\r\n  const { fetchData, ctxLoad, ctxDetails, ctxResults } = useContext(\r\n    AdminContext\r\n  );\r\n\r\n  const handleChange = useCallback((event, value) => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/users?per_page=${5}&page=${value}`\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData(`http://gulfjobs.nwsols.com/api/users?per_page=${5}&page=${1}`);\r\n    console.log(ctxResults);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {ctxLoad ? (\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <Box display=\"flex\" justifyContent=\"space-between\">\r\n            <Title className={classes.title}>Advertisements </Title>\r\n            <Title className={classes.title}>Total: {ctxDetails.total} </Title>\r\n          </Box>\r\n          <TableContainer>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>Id</StyledTableCell>\r\n                  <StyledTableCell>Name</StyledTableCell>\r\n                  <StyledTableCell>Email</StyledTableCell>\r\n                  <StyledTableCell>Mobile Number</StyledTableCell>\r\n\r\n                  <StyledTableCell align=\"center\">Created Date</StyledTableCell>\r\n                  <StyledTableCell align=\"center\"></StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ctxResults.map((row, index) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {index + 1}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {row.first_name} {row.last_name}\r\n                    </TableCell>\r\n                    <TableCell>{row.email}</TableCell>\r\n                    <TableCell>{row.mobile_number}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Moment\r\n                        date={row.created_at.split(\"T\")[0].replace(/-/g, \"\")}\r\n                        fromNow\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            m={1}\r\n            p={1}\r\n            bgcolor=\"background.paper\"\r\n          >\r\n            <Pagination\r\n              count={ctxDetails.last_page}\r\n              page={ctxDetails.current_page}\r\n              onChange={handleChange}\r\n              showFirstButton\r\n              showLastButton\r\n              color=\"secondary\"\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Title.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Chart.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\routes\\index.js",["305","306"],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\routes\\menuItems.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\config\\index.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\context\\AdminContext.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\context\\AdminReducer.js",["307","308","309","310","311","312","313","314","315","316"],"export const initState = {\r\n  user: localStorage.getItem(\"credentials\") || null,\r\n  results: [],\r\n  loading: true,\r\n  error: \"\",\r\n  details: {},\r\n};\r\n\r\nexport default (state, { type, payload }) => {\r\n  switch (type) {\r\n    case \"LOGIN\":\r\n      const { token, user } = payload;\r\n      localStorage.setItem(\"credentials\", payload);\r\n      return { ...state, user: user };\r\n      break;\r\n    case \"LOGOUT\":\r\n      localStorage.clear();\r\n      return { ...state, user: null };\r\n      break;\r\n    case \"CREATE\":\r\n      console.log(payload);\r\n      return { ...state, loading: payload, error: \"\" };\r\n      break;\r\n    case \"LOADING\":\r\n      return { ...state, loading: payload, error: \"\" };\r\n      break;\r\n    case \"ERROR\":\r\n      return { ...state, error: payload, loading: false };\r\n      break;\r\n    case \"RESULTS\":\r\n      const { data, details } = payload;\r\n      return {\r\n        ...state,\r\n        results: data,\r\n        details: details,\r\n        loading: false,\r\n        error: \"\",\r\n      };\r\n      break;\r\n    case \"DELETE\":\r\n      return {\r\n        ...state,\r\n        results: state.results.filter((res) => res.id !== payload),\r\n      };\r\n      break;\r\n\r\n    default:\r\n      // const token=localStorage.getItem('token')\r\n      // JSON.parse(token)\r\n      return { ...state };\r\n      break;\r\n  }\r\n};\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\404.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\routes\\Index.js",["317"],"import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { spring, AnimatedSwitch } from \"react-router-transition\";\r\nimport Chart from \"../components/Chart\";\r\n\r\nimport Orders from \"../components/Orders\";\r\n\r\nimport Dashboard from \"../pages/dashboard\";\r\nimport PageError from \"../pages/404\";\r\nimport Ads from \"../pages/Ads/Index\";\r\nimport Category from \"../pages/Category/Index\";\r\nimport Tip from \"../pages/Tip/Index\";\r\nimport Education from \"../pages/Education/Index\";\r\nimport Industry from \"../pages/Industry/Index\";\r\nimport Faq from \"../pages/Faq/Index\";\r\nimport Location from \"../pages/Location/Index\";\r\nimport Job from \"../pages/Job/Index\";\r\nimport Service from \"../pages/Service/Index\";\r\nimport Partner from \"../pages/Partner/Index\";\r\n\r\nimport \"moment-timezone\";\r\nimport AdsUpsert from \"../components/Ads/AdsUpsert\";\r\nimport CategoryUpsert from \"../components/Category/CategoryUpsert\";\r\nimport TipUpsert from \"../components/Tip/TipUpsert\";\r\nimport EducationUpsert from \"../components/Education/EducationUpsert\";\r\nimport IndustryUpsert from \"../components/Industry/IndustryUpsert\";\r\nimport FaqUpsert from \"../components/Faq/FaqUpsert\";\r\n\r\nimport LocationUpsert from \"../components/Location/LocationUpsert\";\r\nimport JobUpsert from \"../components/Job/JobUpsert\";\r\nimport ServiceUpsert from \"../components/Service/ServiceUpsert\";\r\nimport PartnerUpsert from \"../components/Partner/PartnerUpsert\";\r\n\r\nconst Index = (props) => {\r\n  return (\r\n    <>\r\n      <Dashboard {...props}>\r\n        <AnimatedSwitch\r\n          atEnter={bounceTransition.atEnter}\r\n          atLeave={bounceTransition.atLeave}\r\n          atActive={bounceTransition.atActive}\r\n          mapStyles={mapStyles}\r\n        >\r\n          <Route exact path=\"/admin\" component={Chart} />\r\n          <Route exact path=\"/admin/user\" component={Orders} />\r\n          <Route exact path=\"/admin/ads\" component={Ads} />\r\n          <Route exact path=\"/admin/ads/create\" component={AdsUpsert} />\r\n          <Route exact path=\"/admin/ads/edit/:editId\" component={AdsUpsert} />\r\n          <Route exact path=\"/admin/category\" component={Category} />\r\n          <Route\r\n            exact\r\n            path=\"/admin/category/create\"\r\n            component={CategoryUpsert}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/admin/category/edit/:editId\"\r\n            component={CategoryUpsert}\r\n          />\r\n          <Route exact path=\"/admin/tip\" component={Tip} />\r\n          <Route exact path=\"/admin/tip/create\" component={TipUpsert} />\r\n          <Route exact path=\"/admin/tip/edit/:editId\" component={TipUpsert} />\r\n          <Route exact path=\"/admin/education\" component={Education} />\r\n          <Route\r\n            exact\r\n            path=\"/admin/education/create\"\r\n            component={EducationUpsert}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/admin/education/edit/:editId\"\r\n            component={EducationUpsert}\r\n          />\r\n          <Route exact path=\"/admin/industry\" component={Industry} />\r\n          <Route\r\n            exact\r\n            path=\"/admin/industry/create\"\r\n            component={IndustryUpsert}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/admin/industry/edit/:editId\"\r\n            component={IndustryUpsert}\r\n          />\r\n          <Route exact path=\"/admin/faq\" component={Faq} />\r\n          <Route exact path=\"/admin/faq/create\" component={FaqUpsert} />\r\n          <Route exact path=\"/admin/faq/edit/:editId\" component={FaqUpsert} />\r\n          <Route exact path=\"/admin/location\" component={Location} />\r\n          <Route\r\n            exact\r\n            path=\"/admin/location/create\"\r\n            component={LocationUpsert}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/admin/location/edit/:editId\"\r\n            component={LocationUpsert}\r\n          />\r\n          <Route exact path=\"/admin/job\" component={Job} />\r\n          <Route exact path=\"/admin/job/create\" component={JobUpsert} />\r\n          <Route exact path=\"/admin/job/edit/:editId\" component={JobUpsert} />\r\n          <Route exact path=\"/admin/service\" component={Service} />\r\n          <Route exact path=\"/admin/service/create\" component={ServiceUpsert} />\r\n          <Route\r\n            exact\r\n            path=\"/admin/service/edit/:editId\"\r\n            component={ServiceUpsert}\r\n          />\r\n          <Route exact path=\"/admin/partner\" component={Partner} />\r\n          <Route exact path=\"/admin/partner/create\" component={PartnerUpsert} />\r\n          <Route\r\n            exact\r\n            path=\"/admin/partner/edit/:editId\"\r\n            component={PartnerUpsert}\r\n          />\r\n          <Route path=\"*\" component={PageError} />\r\n        </AnimatedSwitch>{\" \"}\r\n      </Dashboard>\r\n    </>\r\n  );\r\n};\r\nfunction mapStyles(styles) {\r\n  return {\r\n    opacity: styles.opacity,\r\n    transform: `scale(${styles.scale})`,\r\n  };\r\n}\r\n\r\nfunction bounce(val) {\r\n  return spring(val, {\r\n    stiffness: 330,\r\n    damping: 22,\r\n  });\r\n}\r\n\r\nconst bounceTransition = {\r\n  atEnter: {\r\n    opacity: 0,\r\n    scale: 1.2,\r\n  },\r\n\r\n  atLeave: {\r\n    opacity: bounce(0),\r\n    scale: bounce(0.8),\r\n  },\r\n\r\n  atActive: {\r\n    opacity: bounce(1),\r\n    scale: bounce(1),\r\n  },\r\n};\r\n\r\nexport default Index;\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\routes\\Routes.js",["318","319","320","321","322","323","324","325","326","327"],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\theme.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\routes\\Auth.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Ads\\Index.js",["328","329"],"import React, { useContext, useCallback, useEffect } from \"react\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Box,\r\n  Typography,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport Title from \"../../components/Title\";\r\n\r\nimport AdsTable from \"../../components/Ads/AdsTable\";\r\n\r\nexport default function Ads() {\r\n  const classes = useStyles2();\r\n  const { fetchData, ctxLoad, ctxDetails, ctxResults } = useContext(\r\n    AdminContext\r\n  );\r\n\r\n  const handleChange = useCallback((event, value) => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/advertisements?per_page=${5}&page=${value}`\r\n    );\r\n    console.log(value);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/advertisements?per_page=${5}&page=${1}`\r\n    );\r\n    console.log(ctxResults);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {ctxLoad ? (\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            flexWrap=\"wrap\"\r\n          >\r\n            <Title className={classes.title}>Advertisements </Title>\r\n            <Typography\r\n              className={classes.title}\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              color=\"primary\"\r\n              gutterBottom\r\n            >\r\n              Total: {ctxDetails.total}{\" \"}\r\n            </Typography>\r\n          </Box>\r\n          <TableContainer>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>S.No</StyledTableCell>\r\n                  <StyledTableCell>Location</StyledTableCell>\r\n                  <StyledTableCell>Content</StyledTableCell>\r\n                  <StyledTableCell>Status</StyledTableCell>\r\n\r\n                  <StyledTableCell align=\"center\">Created</StyledTableCell>\r\n                  <StyledTableCell align=\"center\"></StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ctxResults.map((row, index) => (\r\n                  <AdsTable\r\n                    row={row}\r\n                    index={index}\r\n                    key={index}\r\n                    crtPage={ctxDetails.current_page}\r\n                  />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            m={1}\r\n            p={1}\r\n            bgcolor=\"background.paper\"\r\n          >\r\n            <Pagination\r\n              count={ctxDetails.last_page}\r\n              page={ctxDetails.current_page || 1}\r\n              onChange={handleChange}\r\n              showFirstButton\r\n              showLastButton\r\n              color=\"secondary\"\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  title: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Ads\\AdsTable.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Ads\\AdsDel.js",["330"],"import React, { useCallback, useContext, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\nimport { Delete, Close } from \"@material-ui/icons\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function AdsDel({ delId }) {\r\n  const { handleDelete } = useContext(AdminContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const AdsDelete = useCallback(() => {\r\n    handleDelete(`${BaseUrl}/advertisements/${delId}`, delId);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={handleClickOpen} fullWidth>\r\n        <Delete />\r\n      </Button>\r\n      <Dialog open={open} keepMounted>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <DialogTitle>Are you sure to Delete this Advertisement</DialogTitle>\r\n          <Button edge=\"start\" color=\"inherit\" onClick={handleClose}>\r\n            <Close />\r\n          </Button>\r\n        </Box>\r\n\r\n        <DialogActions>\r\n          <Button onClick={AdsDelete} color=\"secondary\" variant=\"outlined\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Category\\Index.js",["331","332"],"import React, { useContext, useCallback, useEffect } from \"react\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  \r\n  Box,\r\n  Typography,\r\n  \r\n  CircularProgress,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport Title from \"../../components/Title\";\r\n\r\nimport CategoryTable from \"../../components/Category/CategoryTable\";\r\n\r\nexport default function Category() {\r\n  const classes = useStyles2();\r\n  const { fetchData, ctxLoad, ctxDetails, ctxResults } = useContext(\r\n    AdminContext\r\n  );\r\n\r\n  const handleChange = useCallback((event, value) => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/categories?per_page=${5}&page=${value}`\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/categories?per_page=${5}&page=${1}`\r\n    );\r\n    console.log(ctxResults);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {ctxLoad ? (\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            flexWrap=\"wrap\"\r\n          >\r\n            <Title className={classes.title}>Categories </Title>\r\n            <Typography\r\n              className={classes.title}\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              color=\"primary\"\r\n              gutterBottom\r\n            >\r\n              Total: {ctxDetails.total}{\" \"}\r\n            </Typography>\r\n          </Box>\r\n          <TableContainer>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>S.No</StyledTableCell>\r\n                  <StyledTableCell>Name</StyledTableCell>\r\n                  <StyledTableCell>Type</StyledTableCell>\r\n\r\n                  <StyledTableCell align=\"center\">Created</StyledTableCell>\r\n                  <StyledTableCell align=\"center\"></StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ctxResults.map((row, index) => (\r\n                  <CategoryTable row={row} index={index} key={index} crtPage={ctxDetails.current_page} />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            m={1}\r\n            p={1}\r\n            bgcolor=\"background.paper\"\r\n          >\r\n            <Pagination\r\n              count={ctxDetails.last_page}\r\n              page={ctxDetails.current_page || 1}\r\n              onChange={handleChange}\r\n              showFirstButton\r\n              showLastButton\r\n              color=\"secondary\"\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  title: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Category\\CategoryTable.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Category\\CategoryDel.js",["333"],"import React, { useCallback, useContext, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\nimport { Delete, Close } from \"@material-ui/icons\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function CategoryDel({ delId }) {\r\n  const { handleDelete } = useContext(AdminContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const CategoryDelete = useCallback(() => {\r\n    handleDelete(`${BaseUrl}/categories/${delId}`, delId);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={handleClickOpen} fullWidth>\r\n        <Delete />\r\n      </Button>\r\n      <Dialog open={open} keepMounted>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <DialogTitle>\r\n            Are you sure to Delete this \r\n          </DialogTitle>\r\n          <Button edge=\"start\" color=\"inherit\" onClick={handleClose}>\r\n            <Close />\r\n          </Button>\r\n        </Box>\r\n\r\n        <DialogActions>\r\n          <Button onClick={CategoryDelete} color=\"secondary\" variant=\"outlined\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Ads\\AdsUpsert.js",["334","335","336","337","338","339","340","341","342"],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Category\\CategoryUpsert.js",["343"],"import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Container,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport Title from \"../Title\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nfunction CategoryUpsert() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { handleEdit, handleGet, handleCreate } = useContext(AdminContext);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    slug: \"\",\r\n    type: \"\",\r\n  });\r\n  const handleChange = useCallback(\r\n    (e) => {\r\n      const { name, value } = e.target;\r\n\r\n      setValues({ ...values, [name]: value });\r\n    },\r\n    [values]\r\n  );\r\n  let { editId } = useParams();\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onSubmit\",\r\n    reValidateMode: \"onChange\",\r\n    defaultValues: {},\r\n    resolver: undefined,\r\n    context: undefined,\r\n    criteriaMode: \"firstError\",\r\n    shouldFocusError: true,\r\n    shouldUnregister: true,\r\n  });\r\n  useEffect(() => {\r\n    if (editId) {\r\n      new Promise((rsl, rej) => {\r\n        handleGet(`${BaseUrl}/categories/${editId}`, editId, rsl, rej);\r\n      })\r\n        .then((res) => {\r\n          const { name, slug, type } = res;\r\n          const formData = {\r\n            name,\r\n            slug,\r\n            type,\r\n          };\r\n\r\n          setValues(formData);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const EditSubmit = async (data) => {\r\n    new Promise((rsl, rej) => {\r\n      if (editId) {\r\n        handleEdit(`${BaseUrl}/categories/${editId}`, values, rsl, rej);\r\n      } else {\r\n        handleCreate(`${BaseUrl}/categories`, values, rsl, rej);\r\n      }\r\n    })\r\n      .then((res) => history.push(\"/admin/category\"))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\r\n        <div className={classes.paper}>\r\n          <Title>{editId ? \"Edit\" : \"Insert\"} Category </Title>\r\n          <form className={classes.form} onSubmit={handleSubmit(EditSubmit)}>\r\n            <TextField\r\n              type=\"text\"\r\n              margin=\"dense\"\r\n              label=\"Category Name *\"\r\n              name=\"name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={values.name}\r\n              onChange={handleChange}\r\n              error={errors.name ? true : false}\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n            />\r\n            <FormHelperText error>{errors.name?.message}</FormHelperText>\r\n\r\n            <TextField\r\n              name=\"slug\"\r\n              label=\"Category Slug *\"\r\n              variant=\"outlined\"\r\n              value={values.slug}\r\n              onChange={handleChange}\r\n              margin=\"dense\"\r\n              type=\"text\"\r\n              onKeyUp={(ev) => {\r\n                if (ev.which === 32) {\r\n                  setValues({\r\n                    ...values,\r\n                    slug: ev.target.value.replace(/\\s+/g, \"_\"),\r\n                  });\r\n                }\r\n              }}\r\n              fullWidth\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n              error={errors.slug ? true : false}\r\n            />\r\n            <FormHelperText error>{errors.slug?.message}</FormHelperText>\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"type\"\r\n              label=\"Category *\"\r\n              variant=\"outlined\"\r\n              value={values.type}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              fullWidth\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n              error={errors.type ? true : false}\r\n            />\r\n            <FormHelperText error>{errors.type?.message}</FormHelperText>\r\n\r\n            <div className={classes.wrapper}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\nexport default CategoryUpsert;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    color: \"white\",\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"70%\",\r\n  },\r\n}));\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Tip\\Index.js",["344","345"],"import React, { useContext, useCallback, useEffect } from \"react\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  \r\n  Box,\r\n  Typography,\r\n  \r\n  CircularProgress,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport Title from \"../../components/Title\";\r\n\r\nimport TipTable from \"../../components/Tip/TipTable\";\r\n\r\nexport default function Tip() {\r\n  const classes = useStyles2();\r\n  const { fetchData, ctxLoad, ctxDetails, ctxResults } = useContext(\r\n    AdminContext\r\n  );\r\n\r\n  const handleChange = useCallback((event, value) => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/tips?per_page=${5}&page=${value}`\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/tips?per_page=${5}&page=${1}`\r\n    );\r\n    console.log(ctxResults);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {ctxLoad ? (\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            flexWrap=\"wrap\"\r\n          >\r\n            <Title className={classes.title}>Tips </Title>\r\n            <Typography\r\n              className={classes.title}\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              color=\"primary\"\r\n              gutterBottom\r\n            >\r\n              Total: {ctxDetails.total}{\" \"}\r\n            </Typography>\r\n          </Box>\r\n          <TableContainer>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>S.No</StyledTableCell>\r\n                  <StyledTableCell>Heading</StyledTableCell>\r\n                  <StyledTableCell>Description</StyledTableCell>\r\n                  <StyledTableCell>Status</StyledTableCell>\r\n                  <StyledTableCell>Category</StyledTableCell>\r\n\r\n                  <StyledTableCell align=\"center\">Created </StyledTableCell>\r\n                  <StyledTableCell align=\"center\"></StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ctxResults.map((row, index) => (\r\n                  <TipTable row={row} index={index} key={index} crtPage={ctxDetails.current_page} />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            m={1}\r\n            p={1}\r\n            bgcolor=\"background.paper\"\r\n          >\r\n            <Pagination\r\n              count={ctxDetails.last_page}\r\n              page={ctxDetails.current_page || 1}\r\n              onChange={handleChange}\r\n              showFirstButton\r\n              showLastButton\r\n              color=\"secondary\"\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  title: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Tip\\TipTable.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Tip\\TipDel.js",["346"],"import React, { useCallback, useContext, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\nimport { Delete, Close } from \"@material-ui/icons\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function TipDel({ delId }) {\r\n  const { handleDelete } = useContext(AdminContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const TipDelete = useCallback(() => {\r\n    handleDelete(`${BaseUrl}/tips/${delId}`, delId);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={handleClickOpen} fullWidth>\r\n        <Delete />\r\n      </Button>\r\n      <Dialog open={open} keepMounted>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <DialogTitle>\r\n            Are you sure to Delete this Tips\r\n          </DialogTitle>\r\n          <Button edge=\"start\" color=\"inherit\" onClick={handleClose}>\r\n            <Close />\r\n          </Button>\r\n        </Box>\r\n\r\n        <DialogActions>\r\n          <Button onClick={TipDelete} color=\"secondary\" variant=\"outlined\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Tip\\TipUpsert.js",["347","348"],"import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Container,\r\n  FormHelperText,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport Title from \"../Title\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function TipUpsert() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { handleEdit, handleGet, handleCreate, handleCategory } = useContext(\r\n    AdminContext\r\n  );\r\n  const [category, setCategory] = useState();\r\n  const [values, setValues] = useState({\r\n    heading: \"\",\r\n    description: \"\",\r\n    slug: \"\",\r\n    category_id: \"\",\r\n  });\r\n  const handleChange = useCallback(\r\n    (e) => {\r\n      const { name, value } = e.target;\r\n\r\n      setValues({ ...values, [name]: value });\r\n    },\r\n    [values]\r\n  );\r\n  let { editId } = useParams();\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onSubmit\",\r\n    reValidateMode: \"onChange\",\r\n    defaultValues: {},\r\n    resolver: undefined,\r\n    context: undefined,\r\n    criteriaMode: \"firstError\",\r\n    shouldFocusError: true,\r\n    shouldUnregister: true,\r\n  });\r\n  useEffect(() => {\r\n    if (editId) {\r\n      new Promise((rsl, rej) => {\r\n        handleGet(`${BaseUrl}/tips/${editId}`, editId, rsl, rej);\r\n      })\r\n        .then((res) => {\r\n          console.log(res, editId);\r\n          const { heading, description, slug, category_id } = res;\r\n          const formData = {\r\n            heading,\r\n            description,\r\n            slug,\r\n            category_id,\r\n          };\r\n\r\n          setValues(formData);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    new Promise((rsl, rej) => {\r\n      handleCategory(`${BaseUrl}/categories`, \"tips\", rsl, rej);\r\n    })\r\n      .then((res) => {\r\n        const cateGory = res.filter((resCat) => resCat.type === \"tips\");\r\n        setCategory(cateGory);\r\n        console.log(cateGory);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const EditSubmit = async (data) => {\r\n    new Promise((rsl, rej) => {\r\n      if (editId) {\r\n        handleEdit(`${BaseUrl}/tips/${editId}`, values, rsl, rej);\r\n      } else {\r\n        handleCreate(`${BaseUrl}/tips`, values, rsl, rej);\r\n      }\r\n    })\r\n      .then((res) => history.push(\"/admin/tip\"))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\r\n        <div className={classes.paper}>\r\n          <Title>{editId ? \"Edit\" : \"Insert\"} Tips </Title>\r\n          <form className={classes.form} onSubmit={handleSubmit(EditSubmit)}>\r\n            <TextField\r\n              type=\"text\"\r\n              label=\"Tip Name *\"\r\n              name=\"heading\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={values.heading}\r\n              onChange={handleChange}\r\n              error={errors.heading ? true : false}\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n            />\r\n            <FormHelperText error>{errors.heading?.message}</FormHelperText>\r\n            <TextField\r\n              type=\"text\"\r\n              label=\"Tip Description *\"\r\n              name=\"description\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              multiline\r\n              rows={3}\r\n              value={values.description}\r\n              onChange={handleChange}\r\n              error={errors.description ? true : false}\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n            />\r\n            <FormHelperText error>{errors.description?.message}</FormHelperText>\r\n\r\n            <TextField\r\n              name=\"slug\"\r\n              label=\"Tip Slug *\"\r\n              variant=\"outlined\"\r\n              onKeyUp={(ev) => {\r\n                if (ev.which === 32) {\r\n                  setValues({\r\n                    ...values,\r\n                    slug: ev.target.value.replace(/\\s+/g, \"_\"),\r\n                  });\r\n                }\r\n              }}\r\n              margin=\"dense\"\r\n              value={values.slug}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              fullWidth\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n              error={errors.slug ? true : false}\r\n            />\r\n            <FormHelperText error>{errors.slug?.message}</FormHelperText>\r\n            {category && (\r\n              <TextField\r\n                label=\"Tips Category Id\"\r\n                margin=\"dense\"\r\n                select\r\n                variant=\"outlined\"\r\n                inputProps={{\r\n                  inputRef: (ref) => {\r\n                    if (!ref) return;\r\n                    register({\r\n                      name: \"category_id\",\r\n                      value: ref.value,\r\n                    });\r\n                  },\r\n                  onChange: (e) => {\r\n                    const { category_id } = values;\r\n\r\n                    setValues({ ...values, category_id: e.target.value });\r\n                  },\r\n                }}\r\n                value={values.category_id}\r\n                fullWidth\r\n                error={errors.category_id ? true : false}\r\n              >\r\n                {/* <MenuItem></MenuItem> */}\r\n                {category.map((ctg, i) => (\r\n                  <MenuItem value={ctg.id} key={i}>\r\n                    {ctg.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            )}\r\n\r\n            <FormHelperText error>{errors.category_id?.message}</FormHelperText>\r\n            <div className={classes.wrapper}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    color: \"white\",\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"70%\",\r\n  },\r\n}));\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Education\\Index.js",["349","350"],"import React, { useContext, useCallback, useEffect } from \"react\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  \r\n  Box,\r\n  Typography,\r\n  \r\n  CircularProgress,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport Title from \"../../components/Title\";\r\n\r\nimport EducationTable from \"../../components/Education/EducationTable\";\r\n\r\nexport default function Education() {\r\n  const classes = useStyles2();\r\n  const { fetchData, ctxLoad, ctxDetails, ctxResults } = useContext(\r\n    AdminContext\r\n  );\r\n\r\n  const handleChange = useCallback((event, value) => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/educations?per_page=${5}&page=${value}`\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/educations?per_page=${5}&page=${1}`\r\n    );\r\n    console.log(ctxResults);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {ctxLoad ? (\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            flexWrap=\"wrap\"\r\n          >\r\n            <Title className={classes.title}>Educations </Title>\r\n            <Typography\r\n              className={classes.title}\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              color=\"primary\"\r\n              gutterBottom\r\n            >\r\n              Total: {ctxDetails.total}{\" \"}\r\n            </Typography>\r\n          </Box>\r\n          <TableContainer>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>S.No</StyledTableCell>\r\n                  <StyledTableCell>Name</StyledTableCell>\r\n\r\n                  <StyledTableCell>Status</StyledTableCell>\r\n\r\n                  <StyledTableCell align=\"center\">Created </StyledTableCell>\r\n                  <StyledTableCell align=\"center\"></StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ctxResults.map((row, index) => (\r\n                  <EducationTable row={row} index={index} key={index} crtPage={ctxDetails.current_page} />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            m={1}\r\n            p={1}\r\n            bgcolor=\"background.paper\"\r\n          >\r\n            <Pagination\r\n              count={ctxDetails.last_page}\r\n              page={ctxDetails.current_page || 1}\r\n              onChange={handleChange}\r\n              showFirstButton\r\n              showLastButton\r\n              color=\"secondary\"\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  title: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Education\\EducationTable.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Education\\EducationDel.js",["351"],"import React, { useCallback, useContext, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\nimport { Delete, Close } from \"@material-ui/icons\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function EducationDel({ delId }) {\r\n  const { handleDelete } = useContext(AdminContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const EducationDelete = useCallback(() => {\r\n    handleDelete(`${BaseUrl}/educations/${delId}`, delId);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={handleClickOpen} fullWidth>\r\n        <Delete />\r\n      </Button>\r\n      <Dialog open={open} keepMounted>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <DialogTitle>\r\n            Are you sure to Delete this \r\n          </DialogTitle>\r\n          <Button edge=\"start\" color=\"inherit\" onClick={handleClose}>\r\n            <Close />\r\n          </Button>\r\n        </Box>\r\n\r\n        <DialogActions>\r\n          <Button onClick={EducationDelete} color=\"secondary\" variant=\"outlined\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Education\\EducationUpsert.js",["352"],"import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Container,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport Title from \"../Title\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function AdsUpsert() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { handleEdit, handleGet, handleCreate } = useContext(AdminContext);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    slug: \"\",\r\n  });\r\n  const handleChange = useCallback(\r\n    (e) => {\r\n      const { name, value } = e.target;\r\n\r\n      setValues({ ...values, [name]: value });\r\n    },\r\n    [values]\r\n  );\r\n  let { editId } = useParams();\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onSubmit\",\r\n    reValidateMode: \"onChange\",\r\n    defaultValues: {},\r\n    resolver: undefined,\r\n    context: undefined,\r\n    criteriaMode: \"firstError\",\r\n    shouldFocusError: true,\r\n    shouldUnregister: true,\r\n  });\r\n  useEffect(() => {\r\n    if (editId) {\r\n      new Promise((rsl, rej) => {\r\n        handleGet(`${BaseUrl}/educations/${editId}`, editId, rsl, rej);\r\n      })\r\n        .then((res) => {\r\n          const { name, slug } = res;\r\n          const formData = {\r\n            name,\r\n            slug,\r\n          };\r\n\r\n          setValues(formData);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const EditSubmit = async (data) => {\r\n    console.log(values)\r\n    new Promise((rsl, rej) => {\r\n      if (editId) {\r\n        handleEdit(`${BaseUrl}/educations/${editId}`, values, rsl, rej);\r\n      } else {\r\n        handleCreate(`${BaseUrl}/educations`, values, rsl, rej);\r\n      }\r\n    })\r\n      .then((res) => history.push(\"/admin/education\"))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\r\n        <div className={classes.paper}>\r\n          <Title>{editId ? \"Edit\" : \"Insert\"} Education </Title>\r\n          <form className={classes.form} onSubmit={handleSubmit(EditSubmit)}>\r\n            <TextField\r\n              type=\"text\"\r\n              label=\"Education Name *\"\r\n              margin=\"dense\"\r\n              name=\"name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={values.name}\r\n              onChange={handleChange}\r\n              error={errors.name ? true : false}\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n            />\r\n            <FormHelperText error>{errors.name?.message}</FormHelperText>\r\n\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"slug\"\r\n              onKeyUp={(ev) => {\r\n                if (ev.which === 32) {\r\n                  setValues({\r\n                    ...values,\r\n                    slug: ev.target.value.replace(/\\s+/g, \"_\"),\r\n                  });\r\n                }\r\n              }}\r\n              label=\"Education Slug *\"\r\n              variant=\"outlined\"\r\n              value={values.slug}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              fullWidth\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n              error={errors.slug ? true : false}\r\n            />\r\n            <FormHelperText error>{errors.slug?.message}</FormHelperText>\r\n\r\n            <div className={classes.wrapper}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    color: \"white\",\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"70%\",\r\n  },\r\n}));\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Industry\\Index.js",["353","354"],"import React, { useContext, useCallback, useEffect } from \"react\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  \r\n  Box,\r\n  Typography,\r\n  \r\n  CircularProgress,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport Title from \"../../components/Title\";\r\n\r\nimport IndustryTable from \"../../components/Industry/IndustryTable\";\r\n\r\nexport default function Industry() {\r\n  const classes = useStyles2();\r\n  const { fetchData, ctxLoad, ctxDetails, ctxResults } = useContext(\r\n    AdminContext\r\n  );\r\n\r\n  const handleChange = useCallback((event, value) => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/industries?per_page=${5}&page=${value}`\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/industries?per_page=${5}&page=${1}`\r\n    );\r\n    console.log(ctxResults);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {ctxLoad ? (\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            flexWrap=\"wrap\"\r\n          >\r\n            <Title className={classes.title}>Industries </Title>\r\n            <Typography\r\n              className={classes.title}\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              color=\"primary\"\r\n              gutterBottom\r\n            >\r\n              Total: {ctxDetails.total}{\" \"}\r\n            </Typography>\r\n          </Box>\r\n          <TableContainer>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>S.No</StyledTableCell>\r\n                  <StyledTableCell>Name</StyledTableCell>\r\n\r\n                  <StyledTableCell>Status</StyledTableCell>\r\n\r\n                  <StyledTableCell align=\"center\">Created </StyledTableCell>\r\n                  <StyledTableCell align=\"center\"></StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ctxResults.map((row, index) => (\r\n                  <IndustryTable row={row} index={index} key={index} crtPage={ctxDetails.current_page} />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            m={1}\r\n            p={1}\r\n            bgcolor=\"background.paper\"\r\n          >\r\n            <Pagination\r\n              count={ctxDetails.last_page}\r\n              page={ctxDetails.current_page || 1}\r\n              onChange={handleChange}\r\n              showFirstButton\r\n              showLastButton\r\n              color=\"secondary\"\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  title: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Industry\\IndustryTable.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Industry\\IndustryDel.js",["355"],"import React, { useCallback, useContext, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\nimport { Delete, Close } from \"@material-ui/icons\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function IndustryDel({ delId }) {\r\n  const { handleDelete } = useContext(AdminContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const IndustryDelete = useCallback(() => {\r\n    handleDelete(`${BaseUrl}/industries/${delId}`, delId);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={handleClickOpen} fullWidth>\r\n        <Delete />\r\n      </Button>\r\n      <Dialog open={open} keepMounted>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <DialogTitle>\r\n            Are you sure to Delete this \r\n          </DialogTitle>\r\n          <Button edge=\"start\" color=\"inherit\" onClick={handleClose}>\r\n            <Close />\r\n          </Button>\r\n        </Box>\r\n\r\n        <DialogActions>\r\n          <Button onClick={IndustryDelete} color=\"secondary\" variant=\"outlined\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Industry\\IndustryUpsert.js",["356"],"import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Container,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport Title from \"../Title\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function AdsUpsert() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { handleEdit, handleGet, handleCreate } = useContext(AdminContext);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    slug: \"\",\r\n  });\r\n  const handleChange = useCallback(\r\n    (e) => {\r\n      const { name, value } = e.target;\r\n\r\n      setValues({ ...values, [name]: value });\r\n    },\r\n    [values]\r\n  );\r\n  let { editId } = useParams();\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onSubmit\",\r\n    reValidateMode: \"onChange\",\r\n    defaultValues: {},\r\n    resolver: undefined,\r\n    context: undefined,\r\n    criteriaMode: \"firstError\",\r\n    shouldFocusError: true,\r\n    shouldUnregister: true,\r\n  });\r\n  useEffect(() => {\r\n    if (editId) {\r\n      new Promise((rsl, rej) => {\r\n        handleGet(`${BaseUrl}/industries/${editId}`, editId, rsl, rej);\r\n      })\r\n        .then((res) => {\r\n          const { name, slug } = res;\r\n          const formData = {\r\n            name,\r\n            slug,\r\n          };\r\n          console.log(res);\r\n          setValues(formData);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const EditSubmit = async (data) => {\r\n    new Promise((rsl, rej) => {\r\n      if (editId) {\r\n        handleEdit(`${BaseUrl}/industries/${editId}`, values, rsl, rej);\r\n      } else {\r\n        handleCreate(`${BaseUrl}/industries`, values, rsl, rej);\r\n      }\r\n    })\r\n      .then((res) => history.push(\"/admin/industry\"))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\r\n        <div className={classes.paper}>\r\n          <Title>{editId ? \"Edit\" : \"Insert\"} Industry </Title>\r\n          <form className={classes.form} onSubmit={handleSubmit(EditSubmit)}>\r\n            <TextField\r\n              type=\"text\"\r\n              label=\"Industry Name *\"\r\n              name=\"name\"\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              value={values.name}\r\n              onChange={handleChange}\r\n              error={errors.name ? true : false}\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n            />\r\n            <FormHelperText error>{errors.name?.message}</FormHelperText>\r\n\r\n            <TextField\r\n              name=\"slug\"\r\n              label=\"Industry Slug *\"\r\n              variant=\"outlined\"\r\n              onKeyUp={(ev) => {\r\n                if (ev.which === 32) {\r\n                  setValues({\r\n                    ...values,\r\n                    slug: ev.target.value.replace(/\\s+/g, \"_\"),\r\n                  });\r\n                }\r\n              }}\r\n              value={values.slug}\r\n              onChange={handleChange}\r\n              margin=\"dense\"\r\n              type=\"text\"\r\n              fullWidth\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n              error={errors.slug ? true : false}\r\n            />\r\n            <FormHelperText error>{errors.slug?.message}</FormHelperText>\r\n\r\n            <div className={classes.wrapper}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    color: \"white\",\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"70%\",\r\n  },\r\n}));\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Faq\\Index.js",["357","358"],"import React, { useContext, useCallback, useEffect } from \"react\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  \r\n  Box,\r\n  Typography,\r\n  \r\n  CircularProgress,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport Title from \"../../components/Title\";\r\n\r\nimport FaqTable from \"../../components/Faq/FaqTable\";\r\n\r\nexport default function Faq() {\r\n  const classes = useStyles2();\r\n  const { fetchData, ctxLoad, ctxDetails, ctxResults } = useContext(\r\n    AdminContext\r\n  );\r\n\r\n  const handleChange = useCallback((event, value) => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/faqs?per_page=${5}&page=${value}`\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/faqs?per_page=${5}&page=${1}`\r\n    );\r\n    console.log(ctxResults);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {ctxLoad ? (\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            flexWrap=\"wrap\"\r\n          >\r\n            <Title className={classes.title}>FAQs </Title>\r\n            <Typography\r\n              className={classes.title}\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              color=\"primary\"\r\n              gutterBottom\r\n            >\r\n              Total: {ctxDetails.total}{\" \"}\r\n            </Typography>\r\n          </Box>\r\n          <TableContainer>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>S.No</StyledTableCell>\r\n                  <StyledTableCell>Heading</StyledTableCell>\r\n                  <StyledTableCell>Description</StyledTableCell>\r\n                  <StyledTableCell>Status</StyledTableCell>\r\n                  <StyledTableCell>Category </StyledTableCell>\r\n\r\n                  <StyledTableCell align=\"center\">Created </StyledTableCell>\r\n                  <StyledTableCell align=\"center\"></StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ctxResults.map((row, index) => (\r\n                  <FaqTable row={row} index={index} key={index} crtPage={ctxDetails.current_page} />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            m={1}\r\n            p={1}\r\n            bgcolor=\"background.paper\"\r\n          >\r\n            <Pagination\r\n              count={ctxDetails.last_page}\r\n              page={ctxDetails.current_page || 1}\r\n              onChange={handleChange}\r\n              showFirstButton\r\n              showLastButton\r\n              color=\"secondary\"\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  title: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Faq\\FaqTable.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Faq\\FaqDel.js",["359"],"import React, { useCallback, useContext, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\nimport { Delete, Close } from \"@material-ui/icons\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function FaqDel({ delId }) {\r\n  const { handleDelete } = useContext(AdminContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const FaqDelete = useCallback(() => {\r\n    handleDelete(`${BaseUrl}/faqs/${delId}`, delId);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={handleClickOpen} fullWidth>\r\n        <Delete />\r\n      </Button>\r\n      <Dialog open={open} keepMounted>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <DialogTitle>\r\n            Are you sure to Delete this \r\n          </DialogTitle>\r\n          <Button edge=\"start\" color=\"inherit\" onClick={handleClose}>\r\n            <Close />\r\n          </Button>\r\n        </Box>\r\n\r\n        <DialogActions>\r\n          <Button onClick={FaqDelete} color=\"secondary\" variant=\"outlined\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Faq\\FaqUpsert.js",["360","361"],"import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Container,\r\n  FormHelperText,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport Title from \"../Title\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function TipUpsert() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { handleEdit, handleGet, handleCreate, handleCategory } = useContext(\r\n    AdminContext\r\n  );\r\n  const [category, setCategory] = useState();\r\n  const [values, setValues] = useState({\r\n    heading: \"\",\r\n    description: \"\",\r\n    slug: \"\",\r\n    category_id: \"\",\r\n  });\r\n  const handleChange = useCallback(\r\n    (e) => {\r\n      const { name, value } = e.target;\r\n\r\n      setValues({ ...values, [name]: value });\r\n    },\r\n    [values]\r\n  );\r\n  let { editId } = useParams();\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onSubmit\",\r\n    reValidateMode: \"onChange\",\r\n    defaultValues: {},\r\n    resolver: undefined,\r\n    context: undefined,\r\n    criteriaMode: \"firstError\",\r\n    shouldFocusError: true,\r\n    shouldUnregister: true,\r\n  });\r\n  useEffect(() => {\r\n    if (editId) {\r\n      new Promise((rsl, rej) => {\r\n        handleGet(`${BaseUrl}/faqs/${editId}`, editId, rsl, rej);\r\n      })\r\n        .then((res) => {\r\n          console.log(res, editId);\r\n          const { heading, description, slug, category_id } = res;\r\n          const formData = {\r\n            heading,\r\n            description,\r\n            slug,\r\n            category_id,\r\n          };\r\n          console.log(res, \"kj\");\r\n\r\n          setValues(formData);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    new Promise((rsl, rej) => {\r\n      handleCategory(`${BaseUrl}/categories`, \"faq\", rsl, rej);\r\n    })\r\n      .then((res) => {\r\n        const cateGory = res.filter((resCat) => resCat.type === \"faq\");\r\n        setCategory(cateGory);\r\n        console.log(cateGory);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const EditSubmit = async (data) => {\r\n    new Promise((rsl, rej) => {\r\n      if (editId) {\r\n        handleEdit(`${BaseUrl}/faqs/${editId}`, values, rsl, rej);\r\n      } else {\r\n        handleCreate(`${BaseUrl}/faqs`, values, rsl, rej);\r\n      }\r\n    })\r\n      .then((res) => history.push(\"/admin/faq\"))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\r\n        <div className={classes.paper}>\r\n          <Title>{editId ? \"Edit\" : \"Insert\"} FAQ </Title>\r\n          <form className={classes.form} onSubmit={handleSubmit(EditSubmit)}>\r\n            <TextField\r\n              type=\"text\"\r\n              margin=\"dense\"\r\n              label=\"Faq Name *\"\r\n              name=\"heading\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={values.heading}\r\n              onChange={handleChange}\r\n              error={errors.heading ? true : false}\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n            />\r\n            <FormHelperText error>{errors.heading?.message}</FormHelperText>\r\n            <TextField\r\n              margin=\"dense\"\r\n              type=\"text\"\r\n              label=\"Faq Description *\"\r\n              name=\"description\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              multiline\r\n              rows={3}\r\n              value={values.description}\r\n              onChange={handleChange}\r\n              error={errors.description ? true : false}\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n            />\r\n            <FormHelperText error>{errors.description?.message}</FormHelperText>\r\n\r\n            <TextField\r\n              name=\"slug\"\r\n              margin=\"dense\"\r\n              label=\"Faq Slug *\"\r\n              variant=\"outlined\"\r\n              value={values.slug}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              onKeyUp={(ev) => {\r\n                if (ev.which === 32) {\r\n                  setValues({\r\n                    ...values,\r\n                    slug: ev.target.value.replace(/\\s+/g, \"_\"),\r\n                  });\r\n                }\r\n              }}\r\n              fullWidth\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n              error={errors.slug ? true : false}\r\n            />\r\n            <FormHelperText error>{errors.slug?.message}</FormHelperText>\r\n\r\n            {category && (\r\n              <TextField\r\n                label=\"Faq Category\"\r\n                margin=\"dense\"\r\n                select\r\n                variant=\"outlined\"\r\n                inputProps={{\r\n                  inputRef: (ref) => {\r\n                    if (!ref) return;\r\n                    register({\r\n                      name: \"category_id\",\r\n                      value: ref.value,\r\n                    });\r\n                  },\r\n                  onChange: (e) => {\r\n                    const { category_id } = values;\r\n\r\n                    setValues({\r\n                      ...values,\r\n                      category_id: e.target.value,\r\n                    });\r\n                  },\r\n                }}\r\n                value={values.category_id}\r\n                fullWidth\r\n                error={errors.category_id ? true : false}\r\n              >\r\n                {/* <MenuItem></MenuItem> */}\r\n                {category.map((ctg, i) => (\r\n                  <MenuItem value={ctg.id} key={i}>\r\n                    {ctg.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            )}\r\n            <div className={classes.wrapper}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    color: \"white\",\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"70%\",\r\n  },\r\n}));\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Location\\Index.js",["362","363"],"import React, { useContext, useCallback, useEffect } from \"react\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  \r\n  Box,\r\n  Typography,\r\n  \r\n  CircularProgress,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport Title from \"../../components/Title\";\r\n\r\nimport LocationTable from \"../../components/Location/LocationTable\";\r\n\r\nexport default function Location() {\r\n  const classes = useStyles2();\r\n  const { fetchData, ctxLoad, ctxDetails, ctxResults } = useContext(\r\n    AdminContext\r\n  );\r\n\r\n  const handleChange = useCallback((event, value) => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/locations?per_page=${5}&page=${value}`\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/locations?per_page=${5}&page=${1}`\r\n    );\r\n    console.log(ctxResults);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {ctxLoad ? (\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            flexWrap=\"wrap\"\r\n          >\r\n            <Title className={classes.title}>Locations </Title>\r\n            <Typography\r\n              className={classes.title}\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              color=\"primary\"\r\n              gutterBottom\r\n            >\r\n              Total: {ctxDetails.total}{\" \"}\r\n            </Typography>\r\n          </Box>\r\n          <TableContainer>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>S.No</StyledTableCell>\r\n                  <StyledTableCell>Location</StyledTableCell>\r\n\r\n                  <StyledTableCell>Code</StyledTableCell>\r\n\r\n                  <StyledTableCell align=\"center\">Created </StyledTableCell>\r\n                  <StyledTableCell align=\"center\"></StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ctxResults.map((row, index) => (\r\n                  <LocationTable row={row} index={index} key={index} crtPage={ctxDetails.current_page} />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            m={1}\r\n            p={1}\r\n            bgcolor=\"background.paper\"\r\n          >\r\n            <Pagination\r\n              count={ctxDetails.last_page}\r\n              page={ctxDetails.current_page || 1}\r\n              onChange={handleChange}\r\n              showFirstButton\r\n              showLastButton\r\n              color=\"secondary\"\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  title: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Location\\LocationTable.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Location\\LocationDel.js",["364"],"import React, { useCallback, useContext, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\nimport { Delete, Close } from \"@material-ui/icons\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function LocationDel({ delId }) {\r\n  const { handleDelete } = useContext(AdminContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const LocationDelete = useCallback(() => {\r\n    handleDelete(`${BaseUrl}/locations/${delId}`, delId);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={handleClickOpen} fullWidth>\r\n        <Delete />\r\n      </Button>\r\n      <Dialog open={open} keepMounted>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <DialogTitle>\r\n            Are you sure to Delete this \r\n          </DialogTitle>\r\n          <Button edge=\"start\" color=\"inherit\" onClick={handleClose}>\r\n            <Close />\r\n          </Button>\r\n        </Box>\r\n\r\n        <DialogActions>\r\n          <Button onClick={LocationDelete} color=\"secondary\" variant=\"outlined\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Location\\LocationUpsert.js",["365"],"import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Container,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport Title from \"../Title\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function AdsUpsert() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { handleEdit, handleGet, handleCreate } = useContext(AdminContext);\r\n  const [values, setValues] = useState({\r\n    location_name: \"\",\r\n    slug: \"\",\r\n    code: \"\",\r\n  });\r\n  const handleChange = useCallback(\r\n    (e) => {\r\n      const { name, value } = e.target;\r\n\r\n      setValues({ ...values, [name]: value });\r\n    },\r\n    [values]\r\n  );\r\n  let { editId } = useParams();\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onSubmit\",\r\n    reValidateMode: \"onChange\",\r\n    defaultValues: {},\r\n    resolver: undefined,\r\n    context: undefined,\r\n    criteriaMode: \"firstError\",\r\n    shouldFocusError: true,\r\n    shouldUnregister: true,\r\n  });\r\n  useEffect(() => {\r\n    if (editId) {\r\n      new Promise((rsl, rej) => {\r\n        handleGet(`${BaseUrl}/locations/${editId}`, editId, rsl, rej);\r\n      })\r\n        .then((res) => {\r\n          const { location_name, code, slug } = res;\r\n          const formData = {\r\n            location_name,\r\n            code,\r\n            slug,\r\n          };\r\n\r\n          setValues(formData);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const EditSubmit = async (data) => {\r\n    new Promise((rsl, rej) => {\r\n      if (editId) {\r\n        handleEdit(`${BaseUrl}/locations/${editId}`, values, rsl, rej);\r\n      } else {\r\n        handleCreate(`${BaseUrl}/locations`, values, rsl, rej);\r\n      }\r\n    })\r\n      .then((res) => history.push(\"/admin/location\"))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\r\n        <div className={classes.paper}>\r\n          <Title>{editId ? \"Edit\" : \"Insert\"} Location </Title>\r\n          <form className={classes.form} onSubmit={handleSubmit(EditSubmit)}>\r\n            <TextField\r\n              type=\"text\"\r\n              label=\"Location Name *\"\r\n              name=\"location_name\"\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              value={values.location_name}\r\n              onChange={handleChange}\r\n              error={errors.location_name ? true : false}\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n            />\r\n            <FormHelperText error>\r\n              {errors.location_name?.message}\r\n            </FormHelperText>\r\n\r\n            <TextField\r\n              name=\"code\"\r\n              label=\"Location Code *\"\r\n              variant=\"outlined\"\r\n              value={values.code}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n              error={errors.code ? true : false}\r\n            />\r\n            <FormHelperText error>{errors.code?.message}</FormHelperText>\r\n            <TextField\r\n              name=\"slug\"\r\n              label=\"Location Slug *\"\r\n              variant=\"outlined\"\r\n              value={values.slug}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              onKeyUp={(ev) => {\r\n                if (ev.which === 32) {\r\n                  setValues({\r\n                    ...values,\r\n                    slug: ev.target.value.replace(/\\s+/g, \"_\"),\r\n                  });\r\n                }\r\n              }}\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n              error={errors.slug ? true : false}\r\n            />\r\n            <FormHelperText error>{errors.slug?.message}</FormHelperText>\r\n\r\n            <div className={classes.wrapper}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    color: \"white\",\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"70%\",\r\n  },\r\n}));\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Job\\Index.js",["366","367"],"import React, { useContext, useCallback, useEffect } from \"react\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  \r\n  Box,\r\n  Typography,\r\n  \r\n  CircularProgress,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport Title from \"../../components/Title\";\r\n\r\nimport JobTable from \"../../components/Job/JobTable\";\r\n\r\nexport default function Job() {\r\n  const classes = useStyles2();\r\n  const { fetchData, ctxLoad, ctxDetails, ctxResults } = useContext(\r\n    AdminContext\r\n  );\r\n\r\n  const handleChange = useCallback((event, value) => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/jobs?per_page=${5}&page=${value}`\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/jobs?per_page=${5}&page=${1}`\r\n    );\r\n    console.log(ctxResults);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {ctxLoad ? (\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            flexWrap=\"wrap\"\r\n          >\r\n            <Title className={classes.title}>Jobs </Title>\r\n            <Typography\r\n              className={classes.title}\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              color=\"primary\"\r\n              gutterBottom\r\n            >\r\n              Total: {ctxDetails.total}{\" \"}\r\n            </Typography>\r\n          </Box>\r\n          <TableContainer>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>S.No</StyledTableCell>\r\n                  <StyledTableCell>Title</StyledTableCell>\r\n                  <StyledTableCell>Location</StyledTableCell>\r\n                  <StyledTableCell>Status</StyledTableCell>\r\n                  <StyledTableCell>Seats</StyledTableCell>\r\n                  <StyledTableCell>Category</StyledTableCell>\r\n                  <StyledTableCell>Company </StyledTableCell>\r\n\r\n                  <StyledTableCell align=\"center\">Created </StyledTableCell>\r\n                  <StyledTableCell align=\"center\"></StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ctxResults.map((row, index) => (\r\n                  <JobTable row={row} index={index} key={index} crtPage={ctxDetails.current_page} />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            m={1}\r\n            p={1}\r\n            bgcolor=\"background.paper\"\r\n          >\r\n            <Pagination\r\n              count={ctxDetails.last_page}\r\n              page={ctxDetails.current_page || 1}\r\n              onChange={handleChange}\r\n              showFirstButton\r\n              showLastButton\r\n              color=\"secondary\"\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  title: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Job\\JobUpsert.js",["368","369","370","371","372","373","374"],"import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Container,\r\n  FormHelperText,\r\n  MenuItem,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport Title from \"../Title\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\n\r\nconst currencies = [\r\n  {\r\n    name: \"US\",\r\n    value: \"\\u0024\",\r\n  },\r\n  {\r\n    name: \"Cent\",\r\n    value: \"\\u00A2\",\r\n  },\r\n  {\r\n    name: \"Pound\",\r\n    value: \"\\u00A3\",\r\n  },\r\n  {\r\n    name: \"EURO\",\r\n    value: \"\\u20A0\",\r\n  },\r\n  {\r\n    name: \"YEN\",\r\n    value: \"\\u00A5\",\r\n  },\r\n];\r\nconst gender = [\r\n  { name: \"male\", value: \"male\" },\r\n  { name: \"female\", value: \"female\" },\r\n  { name: \"no-preference\", value: \"no-preference\" },\r\n];\r\n\r\nexport default function JobUpsert() {\r\n  const [location, setLocation] = useState([]);\r\n  const [industry, setIndustry] = useState([]);\r\n  const [educations, setEducations] = useState([]);\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const {\r\n    handleEdit,\r\n    handleGet,\r\n    handleCreate,\r\n    handleCategory,\r\n    handleFetch,\r\n  } = useContext(AdminContext);\r\n  const [category, setCategory] = useState();\r\n  const [values, setValues] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    job_location: \"\",\r\n    currency: \"$\",\r\n    min_salry: \"\",\r\n    max_salary: \"\",\r\n    other_benifits: \"\",\r\n    total_seats: \"\",\r\n    category_id: \"\",\r\n    industry_type: \"\",\r\n    functional_area: \"\",\r\n    gender: \"\",\r\n    experience_from: \"\",\r\n    experience_to: \"\",\r\n    nationality: \"\",\r\n    current_location: \"\",\r\n    education: \"\",\r\n    job_faq: \"\",\r\n    company_id: \"\",\r\n  });\r\n  const handleChange = useCallback(\r\n    (e) => {\r\n      const { name, value } = e.target;\r\n\r\n      setValues({ ...values, [name]: value });\r\n    },\r\n    [values]\r\n  );\r\n  let { editId } = useParams();\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onSubmit\",\r\n    reValidateMode: \"onChange\",\r\n    defaultValues: {},\r\n    resolver: undefined,\r\n    context: undefined,\r\n    criteriaMode: \"firstError\",\r\n    shouldFocusError: true,\r\n    shouldUnregister: true,\r\n  });\r\n\r\n  function fetchLocation() {\r\n    new Promise((rsl, rej) => {\r\n      handleFetch(`${BaseUrl}/locations`, rsl, rej);\r\n    })\r\n      .then((res) => {\r\n        setLocation(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    new Promise((rsl, rej) => {\r\n      handleFetch(`${BaseUrl}/industries`, rsl, rej);\r\n    })\r\n      .then((res) => {\r\n        setIndustry(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    new Promise((rsl, rej) => {\r\n      handleFetch(`${BaseUrl}/educations`, rsl, rej);\r\n    })\r\n      .then((res) => {\r\n        setEducations(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchLocation();\r\n    if (editId) {\r\n      new Promise((rsl, rej) => {\r\n        handleGet(`${BaseUrl}/jobs/${editId}`, editId, rsl, rej);\r\n      })\r\n        .then((res) => {\r\n          console.log(res, editId);\r\n          const {\r\n            title,\r\n            description,\r\n            job_location,\r\n            currency,\r\n            min_salry,\r\n            max_salary,\r\n            other_benifits,\r\n            total_seats,\r\n            category_id,\r\n            industry_type,\r\n            functional_area,\r\n            gender,\r\n            experience_from,\r\n            experience_to,\r\n            nationality,\r\n            current_location,\r\n            education,\r\n            job_faq,\r\n            company_id,\r\n          } = res;\r\n          const formData = {\r\n            title,\r\n            description,\r\n            job_location,\r\n            currency,\r\n            min_salry,\r\n            max_salary,\r\n            other_benifits,\r\n            total_seats,\r\n            category_id,\r\n            industry_type,\r\n            functional_area,\r\n            gender,\r\n            experience_from,\r\n            experience_to,\r\n            nationality,\r\n            current_location,\r\n            education,\r\n            job_faq,\r\n            company_id,\r\n          };\r\n\r\n          setValues(formData);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    new Promise((rsl, rej) => {\r\n      handleCategory(`${BaseUrl}/categories`, \"jobs\", rsl, rej);\r\n    })\r\n      .then((res) => {\r\n        const cateGory = res.filter((resCat) => resCat.type === \"tips\");\r\n        setCategory(cateGory);\r\n        console.log(cateGory);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const EditSubmit = async (data) => {\r\n    new Promise((rsl, rej) => {\r\n      if (editId) {\r\n        handleEdit(`${BaseUrl}/jobs/${editId}`, values, rsl, rej);\r\n      } else {\r\n        handleCreate(`${BaseUrl}/jobs`, values, rsl, rej);\r\n      }\r\n    })\r\n      .then((res) => history.push(\"/admin/job\"))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"md\">\r\n        <div className={classes.paper}>\r\n          <Title>{editId ? \"Edit\" : \"Insert\"} Job </Title>\r\n          <form className={classes.form} onSubmit={handleSubmit(EditSubmit)}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  color=\"secondary\"\r\n                  name=\"title\"\r\n                  label=\"Job Title\"\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  autoComplete=\"shipping address-line2\"\r\n                  value={values.title}\r\n                  inputRef={register({ required: \"Title Required\" })}\r\n                  error={errors.title ? true : false}\r\n                />\r\n                <FormHelperText error>{errors.title?.message}</FormHelperText>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  color=\"secondary\"\r\n                  name=\"description\"\r\n                  label=\"Job Description\"\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  multiline\r\n                  rows={4}\r\n                  value={values.description}\r\n                  variant=\"outlined\"\r\n                  inputRef={register({ required: \"Description Required\" })}\r\n                  error={errors.description ? true : false}\r\n                />\r\n                <FormHelperText error>\r\n                  {errors.description?.message}\r\n                </FormHelperText>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      label=\"Currency\"\r\n                      select\r\n                      variant=\"outlined\"\r\n                      inputProps={{\r\n                        inputRef: (ref) => {\r\n                          if (!ref) return;\r\n                          register({\r\n                            name: \"currency\",\r\n                            value: ref.value,\r\n                          });\r\n                        },\r\n                        onChange: (e) => {\r\n                          const { currency } = values;\r\n\r\n                          setValues({\r\n                            ...values,\r\n                            currency: e.target.value,\r\n                          });\r\n                        },\r\n                      }}\r\n                      value={values.currency}\r\n                      fullWidth\r\n                      error={errors.currency ? true : false}\r\n                    >\r\n                      {currencies.map((ctg, i) => (\r\n                        <MenuItem value={ctg.name} key={i}>\r\n                          {ctg.value}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </Grid>\r\n                  <Grid item xs={5}>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      color=\"secondary\"\r\n                      name=\"min_salry\"\r\n                      value={values.min_salry}\r\n                      label=\"Min Salary\"\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      inputRef={register}\r\n                      error={errors.min_salry ? true : false}\r\n                    />\r\n                    <FormHelperText error>\r\n                      {errors.min_salry?.message}\r\n                    </FormHelperText>\r\n                  </Grid>\r\n                  <Grid item xs={5}>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      color=\"secondary\"\r\n                      name=\"max_salary\"\r\n                      label=\"Max Salary\"\r\n                      value={values.max_salary}\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      inputRef={register}\r\n                      error={errors.max_salary ? true : false}\r\n                    />\r\n                    <FormHelperText error>\r\n                      {errors.max_salary?.message}\r\n                    </FormHelperText>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  color=\"secondary\"\r\n                  name=\"other_benifits\"\r\n                  label=\"Other Benifits\"\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  value={values.other_benifits}\r\n                  inputRef={register}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  type=\"number\"\r\n                  name=\"total_seats\"\r\n                  label=\"Total Seats\"\r\n                  color=\"secondary\"\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  value={values.total_seats}\r\n                  variant=\"outlined\"\r\n                  inputRef={register}\r\n                  error={errors.total_seats ? true : false}\r\n                />\r\n                <FormHelperText error>\r\n                  {errors.total_seats?.message}\r\n                </FormHelperText>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"Industry\"\r\n                  select\r\n                  variant=\"outlined\"\r\n                  inputProps={{\r\n                    inputRef: (ref) => {\r\n                      if (!ref) return;\r\n                      register({\r\n                        name: \"industry_type\",\r\n                        value: ref.value,\r\n                      });\r\n                    },\r\n                    onChange: (e) => {\r\n                      const { industry_type } = values;\r\n\r\n                      setValues({ ...values, industry_type: e.target.value });\r\n                    },\r\n                  }}\r\n                  value={values.industry_type}\r\n                  fullWidth\r\n                  error={errors.industry_type ? true : false}\r\n                >\r\n                  {industry &&\r\n                    industry.map((indust) => (\r\n                      <MenuItem value={indust.id} key={indust.id}>\r\n                        {indust.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n\r\n                <FormHelperText error>\r\n                  {errors.industry_type?.message}\r\n                </FormHelperText>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"Location\"\r\n                  select\r\n                  variant=\"outlined\"\r\n                  inputProps={{\r\n                    inputRef: (ref) => {\r\n                      if (!ref) return;\r\n                      register({\r\n                        name: \"job_location\",\r\n                        value: ref.value,\r\n                      });\r\n                    },\r\n                    onChange: (e) => {\r\n                      const { job_location } = values;\r\n\r\n                      setValues({ ...values, job_location: e.target.value });\r\n                    },\r\n                  }}\r\n                  value={values.job_location}\r\n                  fullWidth\r\n                  error={errors.job_location ? true : false}\r\n                >\r\n                  {location &&\r\n                    location.map((loc) => (\r\n                      <MenuItem value={loc.id} key={loc.id}>\r\n                        {loc.location_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n\r\n                <FormHelperText error>\r\n                  {errors.job_location?.message}\r\n                </FormHelperText>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"gender\"\r\n                  select\r\n                  variant=\"outlined\"\r\n                  inputProps={{\r\n                    inputRef: (ref) => {\r\n                      if (!ref) return;\r\n                      register({\r\n                        name: \"gender\",\r\n                        value: ref.value,\r\n                      });\r\n                    },\r\n                    onChange: (e) => {\r\n                      const { gender } = values;\r\n\r\n                      setValues({ ...values, gender: e.target.value });\r\n                    },\r\n                  }}\r\n                  value={values.gender}\r\n                  fullWidth\r\n                  error={errors.gender ? true : false}\r\n                >\r\n                  {gender &&\r\n                    gender.map((indust, i) => (\r\n                      <MenuItem value={indust.value} key={i}>\r\n                        {indust.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n\r\n                <FormHelperText error>{errors.gender?.message}</FormHelperText>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  color=\"secondary\"\r\n                  name=\"experience_from\"\r\n                  label=\"Experience From \"\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  value={values.experience_from}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  color=\"secondary\"\r\n                  name=\"experience_to\"\r\n                  label=\"Experience To\"\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  value={values.experience_to}\r\n                  variant=\"outlined\"\r\n                  inputRef={register}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  color=\"secondary\"\r\n                  name=\"nationality\"\r\n                  label=\"Nationality\"\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  value={values.nationality}\r\n                  variant=\"outlined\"\r\n                  inputRef={register}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"education\"\r\n                  select\r\n                  variant=\"outlined\"\r\n                  inputProps={{\r\n                    inputRef: (ref) => {\r\n                      if (!ref) return;\r\n                      register({\r\n                        name: \"education\",\r\n                        value: ref.value,\r\n                      });\r\n                    },\r\n                    onChange: (e) => {\r\n                      const { education } = values;\r\n\r\n                      setValues({ ...values, education: e.target.value });\r\n                    },\r\n                  }}\r\n                  value={values.education}\r\n                  fullWidth\r\n                  error={errors.education ? true : false}\r\n                >\r\n                  {educations &&\r\n                    educations.map((edu, i) => (\r\n                      <MenuItem value={edu.id} key={i}>\r\n                        {edu.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n\r\n                <FormHelperText error>\r\n                  {errors.education?.message}\r\n                </FormHelperText>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  color=\"secondary\"\r\n                  name=\"job_faq\"\r\n                  label=\"Job FAQ\"\r\n                  multiline\r\n                  onChange={handleChange}\r\n                  rows={2}\r\n                  value={values.job_faq}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  inputRef={register}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  // FormHelperText={errors.company_id?.message}\r\n                  color=\"secondary\"\r\n                  name=\"company_id\"\r\n                  label=\"Company *\"\r\n                  inputRef={register({ required: \"This is Required\" })}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange}\r\n                  value={values.company_id}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <div className={classes.wrapper}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    color: \"white\",\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n}));\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Job\\JobTable.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Job\\JobDel.js",["375"],"import React, { useCallback, useContext, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\nimport { Delete, Close } from \"@material-ui/icons\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function JobDel({ delId }) {\r\n  const { handleDelete } = useContext(AdminContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const JobDelete = useCallback(() => {\r\n    handleDelete(`${BaseUrl}/jobs/${delId}`, delId);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={handleClickOpen} fullWidth>\r\n        <Delete />\r\n      </Button>\r\n      <Dialog open={open} keepMounted>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <DialogTitle>Are you sure to Delete this</DialogTitle>\r\n          <Button edge=\"start\" color=\"inherit\" onClick={handleClose}>\r\n            <Close />\r\n          </Button>\r\n        </Box>\r\n\r\n        <DialogActions>\r\n          <Button onClick={JobDelete} color=\"secondary\" variant=\"outlined\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Service\\Index.js",["376","377"],"import React, { useContext, useCallback, useEffect } from \"react\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  \r\n  Box,\r\n  Typography,\r\n  \r\n  CircularProgress,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport Title from \"../../components/Title\";\r\n\r\nimport ServiceTable from \"../../components/Service/ServiceTable\";\r\n\r\nexport default function Service() {\r\n  const classes = useStyles2();\r\n  const { fetchData, ctxLoad, ctxDetails, ctxResults } = useContext(\r\n    AdminContext\r\n  );\r\n\r\n  const handleChange = useCallback((event, value) => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/services?per_page=${5}&page=${value}`\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/services?per_page=${5}&page=${1}`\r\n    );\r\n    console.log(ctxResults);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {ctxLoad ? (\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            flexWrap=\"wrap\"\r\n          >\r\n            <Title className={classes.title}>Services </Title>\r\n            <Typography\r\n              className={classes.title}\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              color=\"primary\"\r\n              gutterBottom\r\n            >\r\n              Total: {ctxDetails.total}{\" \"}\r\n            </Typography>\r\n          </Box>\r\n          <TableContainer>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>S.No</StyledTableCell>\r\n                  <StyledTableCell>Title</StyledTableCell>\r\n                  \r\n                  <StyledTableCell>Price</StyledTableCell>\r\n                  <StyledTableCell>Status</StyledTableCell>\r\n                  <StyledTableCell>Category</StyledTableCell>\r\n\r\n                  <StyledTableCell align=\"center\">Created </StyledTableCell>\r\n                  <StyledTableCell align=\"center\"></StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ctxResults.map((row, index) => (\r\n                  <ServiceTable row={row} index={index} key={index} crtPage={ctxDetails.current_page}/>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            m={1}\r\n            p={1}\r\n            bgcolor=\"background.paper\"\r\n          >\r\n            <Pagination\r\n              count={ctxDetails.last_page}\r\n              page={ctxDetails.current_page || 1}\r\n              onChange={handleChange}\r\n              showFirstButton\r\n              showLastButton\r\n              color=\"secondary\"\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  title: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Service\\ServiceTable.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Service\\ServiceDel.js",["378"],"import React, { useCallback, useContext, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\nimport { Delete, Close } from \"@material-ui/icons\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function TipDel({ delId }) {\r\n  const { handleDelete } = useContext(AdminContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const ServiceDelete = useCallback(() => {\r\n    handleDelete(`${BaseUrl}/services/${delId}`, delId);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={handleClickOpen} fullWidth>\r\n        <Delete />\r\n      </Button>\r\n      <Dialog open={open} keepMounted>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <DialogTitle>\r\n            Are you sure to Delete this Service\r\n          </DialogTitle>\r\n          <Button edge=\"start\" color=\"inherit\" onClick={handleClose}>\r\n            <Close />\r\n          </Button>\r\n        </Box>\r\n\r\n        <DialogActions>\r\n          <Button onClick={ServiceDelete} color=\"secondary\" variant=\"outlined\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Service\\ServiceUpsert.js",["379","380","381"],"import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Container,\r\n  FormHelperText,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport Title from \"../Title\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function TipUpsert() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { handleEdit, handleGet, handleCreate, handleCategory } = useContext(\r\n    AdminContext\r\n  );\r\n  const [category, setCategory] = useState();\r\n  const [values, setValues] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    slug: \"\",\r\n    status: \"\",\r\n    category_id: \"\",\r\n  });\r\n  const handleChange = useCallback(\r\n    (e) => {\r\n      const { name, value } = e.target;\r\n\r\n      setValues({ ...values, [name]: value });\r\n    },\r\n    [values]\r\n  );\r\n  let { editId } = useParams();\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onSubmit\",\r\n    reValidateMode: \"onChange\",\r\n    defaultValues: {},\r\n    resolver: undefined,\r\n    context: undefined,\r\n    criteriaMode: \"firstError\",\r\n    shouldFocusError: true,\r\n    shouldUnregister: true,\r\n  });\r\n  useEffect(() => {\r\n    if (editId) {\r\n      new Promise((rsl, rej) => {\r\n        handleGet(`${BaseUrl}/services/${editId}`, editId, rsl, rej);\r\n      })\r\n        .then((res) => {\r\n          console.log(res, editId);\r\n          const { title, description, price, status, slug, category_id } = res;\r\n          const formData = {\r\n            title,\r\n            description,\r\n            price,\r\n            status,\r\n            slug,\r\n            category_id,\r\n          };\r\n\r\n          setValues(formData);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    new Promise((rsl, rej) => {\r\n      handleCategory(`${BaseUrl}/categories`, \"services\", rsl, rej);\r\n    })\r\n      .then((res) => {\r\n        const cateGory = res.filter((resCat) => resCat.type === \"services\");\r\n        setCategory(cateGory);\r\n        console.log(cateGory);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const EditSubmit = async (data) => {\r\n    new Promise((rsl, rej) => {\r\n      if (editId) {\r\n        console.log(values);\r\n        handleEdit(`${BaseUrl}/services/${editId}`, values, rsl, rej);\r\n      } else {\r\n        handleCreate(`${BaseUrl}/services`, values, rsl, rej);\r\n      }\r\n    })\r\n      .then((res) => history.push(\"/admin/service\"))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\r\n        <div className={classes.paper}>\r\n          <Title>{editId ? \"Edit\" : \"Insert\"} Service </Title>\r\n          <form className={classes.form} onSubmit={handleSubmit(EditSubmit)}>\r\n            <TextField\r\n              type=\"text\"\r\n              label=\"Service Title *\"\r\n              name=\"title\"\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              value={values.title}\r\n              onChange={handleChange}\r\n              error={errors.title ? true : false}\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n            />\r\n            <FormHelperText error>{errors.title?.message}</FormHelperText>\r\n            <TextField\r\n              type=\"text\"\r\n              label=\"Service Description *\"\r\n              name=\"description\"\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              value={values.description}\r\n              multiline\r\n              rows={3}\r\n              onChange={handleChange}\r\n              error={errors.description ? true : false}\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n            />\r\n            <FormHelperText error>{errors.description?.message}</FormHelperText>\r\n            <TextField\r\n              type=\"text\"\r\n              label=\"Service Price *\"\r\n              margin=\"dense\"\r\n              name=\"price\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={values.price}\r\n              onChange={handleChange}\r\n              error={errors.price ? true : false}\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n            />\r\n            <FormHelperText error>{errors.price?.message}</FormHelperText>\r\n\r\n            <TextField\r\n              name=\"slug\"\r\n              onKeyUp={(ev) => {\r\n                if (ev.which === 32) {\r\n                  setValues({\r\n                    ...values,\r\n                    slug: ev.target.value.replace(/\\s+/g, \"_\"),\r\n                  });\r\n                }\r\n              }}\r\n              label=\"Service Slug *\"\r\n              variant=\"outlined\"\r\n              value={values.slug}\r\n              onChange={handleChange}\r\n              margin=\"dense\"\r\n              type=\"text\"\r\n              fullWidth\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n              error={errors.slug ? true : false}\r\n            />\r\n            <FormHelperText error>{errors.slug?.message}</FormHelperText>\r\n            <TextField\r\n              label=\"status\"\r\n              select\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              inputProps={{\r\n                inputRef: (ref) => {\r\n                  if (!ref) return;\r\n                  register({\r\n                    name: \"status\",\r\n                    value: ref.value,\r\n                  });\r\n                },\r\n                onChange: (e) => {\r\n                  const { status } = values;\r\n\r\n                  setValues({ ...values, status: e.target.value });\r\n                },\r\n              }}\r\n              value={values.status}\r\n              fullWidth\r\n              error={errors.status ? true : false}\r\n            >\r\n              <MenuItem value={0}>In-Active</MenuItem>\r\n              <MenuItem value={1}>Active</MenuItem>\r\n            </TextField>\r\n\r\n            <FormHelperText error>{errors.status?.message}</FormHelperText>\r\n\r\n            {category && (\r\n              <TextField\r\n                label=\"Service Category\"\r\n                select\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                inputProps={{\r\n                  inputRef: (ref) => {\r\n                    if (!ref) return;\r\n                    register({\r\n                      name: \"category_id\",\r\n                      value: ref.value,\r\n                    });\r\n                  },\r\n                  onChange: (e) => {\r\n                    const { category_id } = values;\r\n\r\n                    setValues({\r\n                      ...values,\r\n                      category_id: e.target.value,\r\n                    });\r\n                  },\r\n                }}\r\n                value={values.category_id}\r\n                fullWidth\r\n                error={errors.category_id ? true : false}\r\n              >\r\n                {/* <MenuItem></MenuItem> */}\r\n                {category.map((ctg, i) => (\r\n                  <MenuItem value={ctg.id} key={i}>\r\n                    {ctg.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            )}\r\n\r\n            <FormHelperText error>{errors.category_id?.message}</FormHelperText>\r\n            <div className={classes.wrapper}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    color: \"white\",\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"70%\",\r\n  },\r\n}));\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Partner\\Index.js",["382","383"],"import React, { useContext, useCallback, useEffect } from \"react\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  \r\n  Box,\r\n  Typography,\r\n  \r\n  CircularProgress,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport Title from \"../../components/Title\";\r\n\r\nimport PartnerTable from \"../../components/Partner/PartnerTable\";\r\n\r\nexport default function Location() {\r\n  const classes = useStyles2();\r\n  const { fetchData, ctxLoad, ctxDetails, ctxResults } = useContext(\r\n    AdminContext\r\n  );\r\n\r\n  const handleChange = useCallback((event, value) => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/partners?per_page=${5}&page=${value}`\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData(\r\n      `http://gulfjobs.nwsols.com/api/partners?per_page=${5}&page=${1}`\r\n    );\r\n    console.log(ctxResults);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {ctxLoad ? (\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            flexWrap=\"wrap\"\r\n          >\r\n            <Title className={classes.title}>Partners </Title>\r\n            <Typography\r\n              className={classes.title}\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              color=\"primary\"\r\n              gutterBottom\r\n            >\r\n              Total: {ctxDetails.total}{\" \"}\r\n            </Typography>\r\n          </Box>\r\n          <TableContainer>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>S.No</StyledTableCell>\r\n                  <StyledTableCell>Name</StyledTableCell>\r\n\r\n                  <StyledTableCell>Image</StyledTableCell>\r\n\r\n                  <StyledTableCell align=\"center\">Created </StyledTableCell>\r\n                  <StyledTableCell align=\"center\"></StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ctxResults.map((row, index) => (\r\n                  <PartnerTable\r\n                    row={row}\r\n                    index={index}\r\n                    key={index}\r\n                    crtPage={ctxDetails.current_page}\r\n                  />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            m={1}\r\n            p={1}\r\n            bgcolor=\"background.paper\"\r\n          >\r\n            <Pagination\r\n              count={ctxDetails.last_page}\r\n              page={ctxDetails.current_page || 1}\r\n              onChange={handleChange}\r\n              showFirstButton\r\n              showLastButton\r\n              color=\"secondary\"\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  title: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Partner\\PartnerUpsert.js",["384"],"import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Container,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { DropzoneDialog } from \"material-ui-dropzone\";\r\n\r\nimport Title from \"../Title\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function AdsUpsert() {\r\n  const [fileOpen, setFileOpen] = useState(false);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { handleEdit, handleGet, handleCreate } = useContext(AdminContext);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    image: [],\r\n  });\r\n  const handleChange = useCallback(\r\n    (e) => {\r\n      const { name, value } = e.target;\r\n\r\n      setValues({ ...values, [name]: value });\r\n    },\r\n    [values]\r\n  );\r\n  let { editId } = useParams();\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onSubmit\",\r\n    reValidateMode: \"onChange\",\r\n    defaultValues: {},\r\n    resolver: undefined,\r\n    context: undefined,\r\n    criteriaMode: \"firstError\",\r\n    shouldFocusError: true,\r\n    shouldUnregister: true,\r\n  });\r\n  useEffect(() => {\r\n    if (editId) {\r\n      new Promise((rsl, rej) => {\r\n        handleGet(`${BaseUrl}/partners/${editId}`, editId, rsl, rej);\r\n      })\r\n        .then((res) => {\r\n          const { name, description, image } = res;\r\n          const formData = {\r\n            name,\r\n            description,\r\n            image,\r\n          };\r\n\r\n          setValues(formData);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n  function handleClose() {\r\n    setFileOpen(false);\r\n  }\r\n\r\n  function handleSave(files) {\r\n    setFileOpen(false);\r\n\r\n    setValues({ ...values, image: files });\r\n  }\r\n\r\n  function handleOpen() {\r\n    setFileOpen(true);\r\n  }\r\n\r\n  const EditSubmit = async (data) => {\r\n    // console.log(data.image[0].name);\r\n    // setValues({ ...values, image: data.image[0].name });\r\n    new Promise((rsl, rej) => {\r\n      if (editId) {\r\n        handleEdit(`${BaseUrl}/partners/${editId}`, values, rsl, rej);\r\n      } else {\r\n        handleCreate(`${BaseUrl}/partners`, values, rsl, rej);\r\n      }\r\n    })\r\n      .then((res) => history.push(\"/admin/partner\"))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\r\n        <div className={classes.paper}>\r\n          <Title>{editId ? \"Edit\" : \"Insert\"} Partner </Title>\r\n          <form\r\n            className={classes.form}\r\n            onSubmit={handleSubmit(EditSubmit)}\r\n            encType=\"multipart/form-data\"\r\n          >\r\n            <TextField\r\n              type=\"text\"\r\n              label=\"name *\"\r\n              name=\"name\"\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              value={values.name}\r\n              onChange={handleChange}\r\n              error={errors.name ? true : false}\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n            />\r\n            <FormHelperText error>{errors.name?.message}</FormHelperText>\r\n\r\n            <TextField\r\n              name=\"description\"\r\n              label=\"description *\"\r\n              variant=\"outlined\"\r\n              value={values.description}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              multiline\r\n              rows={4}\r\n              inputRef={register({\r\n                required: \"This is Required\",\r\n              })}\r\n              error={errors.description ? true : false}\r\n            />\r\n            <FormHelperText error>{errors.description?.message}</FormHelperText>\r\n            <Button onClick={handleOpen}>Add Image</Button>\r\n            <DropzoneDialog\r\n              open={fileOpen}\r\n              onSave={handleSave}\r\n              acceptedFiles={[\"image/jpeg\", \"image/png\", \"image/bmp\"]}\r\n              showPreviews={true}\r\n              maxFileSize={5000000}\r\n              onClose={handleClose}\r\n            />\r\n            {/* <input\r\n              accept=\"image/*\"\r\n              style={{ display: \"none\" }}\r\n              id=\"contained-button-file\"\r\n              type=\"file\"\r\n              name=\"image\"\r\n              ref={register}\r\n            />\r\n\r\n            <label htmlFor=\"contained-button-file\">\r\n              <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                Upload\r\n              </Button>\r\n            </label> */}\r\n            <div className={classes.wrapper}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    color: \"white\",\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"70%\",\r\n  },\r\n}));\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Partner\\PartnerTable.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Partner\\PartnerDel.js",["385"],"import React, { useCallback, useContext, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  \r\n} from \"@material-ui/core\";\r\nimport { BaseUrl } from \"../../config\";\r\nimport { Delete, Close } from \"@material-ui/icons\";\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\nexport default function PartnerDel({ delId }) {\r\n  const { handleDelete } = useContext(AdminContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const partnerDelete = useCallback(() => {\r\n    handleDelete(`${BaseUrl}/partners/${delId}`, delId);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={handleClickOpen} fullWidth>\r\n        <Delete />\r\n      </Button>\r\n      <Dialog open={open} keepMounted>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <DialogTitle>\r\n            Are you sure to Delete this\r\n          </DialogTitle>\r\n          <Button edge=\"start\" color=\"inherit\" onClick={handleClose}>\r\n            <Close />\r\n          </Button>\r\n        </Box>\r\n\r\n        <DialogActions>\r\n          <Button onClick={partnerDelete} color=\"secondary\" variant=\"outlined\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\pages\\Package\\Index.js",["386","387","388","389","390","391"],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Package\\PackageTable.js",[],"C:\\Users\\abaid\\Desktop\\gulf\\client\\src\\components\\Package\\PackageDel.js",["392","393"],{"ruleId":"394","replacedBy":"395"},{"ruleId":"396","replacedBy":"397"},{"ruleId":"398","severity":1,"message":"399","line":26,"column":10,"nodeType":"400","messageId":"401","endLine":26,"endColumn":13},{"ruleId":"398","severity":1,"message":"402","line":26,"column":15,"nodeType":"400","messageId":"401","endLine":26,"endColumn":21},{"ruleId":"394","replacedBy":"403"},{"ruleId":"396","replacedBy":"404"},{"ruleId":"398","severity":1,"message":"405","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":26},{"ruleId":"398","severity":1,"message":"406","line":7,"column":3,"nodeType":"400","messageId":"401","endLine":7,"endColumn":15},{"ruleId":"407","severity":1,"message":"408","line":57,"column":9,"nodeType":"409","endLine":57,"endColumn":70},{"ruleId":"410","severity":1,"message":"411","line":98,"column":11,"nodeType":"412","endLine":101,"endColumn":13},{"ruleId":"413","severity":1,"message":"414","line":44,"column":6,"nodeType":"415","endLine":44,"endColumn":8,"suggestions":"416"},{"ruleId":"413","severity":1,"message":"417","line":49,"column":6,"nodeType":"415","endLine":49,"endColumn":8,"suggestions":"418"},{"ruleId":"398","severity":1,"message":"419","line":2,"column":10,"nodeType":"400","messageId":"401","endLine":2,"endColumn":16},{"ruleId":"420","severity":2,"message":"421","line":16,"column":29,"nodeType":"400","endLine":16,"endColumn":37},{"ruleId":"422","severity":1,"message":"423","line":9,"column":1,"nodeType":"424","endLine":53,"endColumn":3},{"ruleId":"398","severity":1,"message":"425","line":12,"column":15,"nodeType":"400","messageId":"401","endLine":12,"endColumn":20},{"ruleId":"426","severity":1,"message":"427","line":15,"column":7,"nodeType":"428","messageId":"429","endLine":15,"endColumn":13},{"ruleId":"426","severity":1,"message":"427","line":19,"column":7,"nodeType":"428","messageId":"429","endLine":19,"endColumn":13},{"ruleId":"426","severity":1,"message":"427","line":23,"column":7,"nodeType":"428","messageId":"429","endLine":23,"endColumn":13},{"ruleId":"426","severity":1,"message":"427","line":26,"column":7,"nodeType":"428","messageId":"429","endLine":26,"endColumn":13},{"ruleId":"426","severity":1,"message":"427","line":29,"column":7,"nodeType":"428","messageId":"429","endLine":29,"endColumn":13},{"ruleId":"426","severity":1,"message":"427","line":39,"column":7,"nodeType":"428","messageId":"429","endLine":39,"endColumn":13},{"ruleId":"426","severity":1,"message":"427","line":45,"column":7,"nodeType":"428","messageId":"429","endLine":45,"endColumn":13},{"ruleId":"426","severity":1,"message":"427","line":51,"column":7,"nodeType":"428","messageId":"429","endLine":51,"endColumn":13},{"ruleId":"398","severity":1,"message":"430","line":2,"column":17,"nodeType":"400","messageId":"401","endLine":2,"endColumn":25},{"ruleId":"398","severity":1,"message":"431","line":6,"column":8,"nodeType":"400","messageId":"401","endLine":6,"endColumn":17},{"ruleId":"398","severity":1,"message":"432","line":7,"column":8,"nodeType":"400","messageId":"401","endLine":7,"endColumn":22},{"ruleId":"398","severity":1,"message":"433","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":17},{"ruleId":"398","severity":1,"message":"434","line":9,"column":8,"nodeType":"400","messageId":"401","endLine":9,"endColumn":23},{"ruleId":"398","severity":1,"message":"435","line":10,"column":8,"nodeType":"400","messageId":"401","endLine":10,"endColumn":22},{"ruleId":"398","severity":1,"message":"436","line":11,"column":8,"nodeType":"400","messageId":"401","endLine":11,"endColumn":17},{"ruleId":"398","severity":1,"message":"437","line":13,"column":8,"nodeType":"400","messageId":"401","endLine":13,"endColumn":22},{"ruleId":"398","severity":1,"message":"438","line":14,"column":8,"nodeType":"400","messageId":"401","endLine":14,"endColumn":17},{"ruleId":"398","severity":1,"message":"439","line":15,"column":8,"nodeType":"400","messageId":"401","endLine":15,"endColumn":21},{"ruleId":"398","severity":1,"message":"440","line":16,"column":8,"nodeType":"400","messageId":"401","endLine":16,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":32,"column":6,"nodeType":"415","endLine":32,"endColumn":8,"suggestions":"441"},{"ruleId":"413","severity":1,"message":"417","line":39,"column":6,"nodeType":"415","endLine":39,"endColumn":8,"suggestions":"442"},{"ruleId":"413","severity":1,"message":"443","line":26,"column":6,"nodeType":"415","endLine":26,"endColumn":8,"suggestions":"444"},{"ruleId":"413","severity":1,"message":"414","line":34,"column":6,"nodeType":"415","endLine":34,"endColumn":8,"suggestions":"445"},{"ruleId":"413","severity":1,"message":"417","line":41,"column":6,"nodeType":"415","endLine":41,"endColumn":8,"suggestions":"446"},{"ruleId":"413","severity":1,"message":"443","line":27,"column":6,"nodeType":"415","endLine":27,"endColumn":8,"suggestions":"447"},{"ruleId":"398","severity":1,"message":"448","line":15,"column":3,"nodeType":"400","messageId":"401","endLine":15,"endColumn":19},{"ruleId":"398","severity":1,"message":"449","line":18,"column":8,"nodeType":"400","messageId":"401","endLine":18,"endColumn":25},{"ruleId":"398","severity":1,"message":"450","line":19,"column":10,"nodeType":"400","messageId":"401","endLine":19,"endColumn":16},{"ruleId":"398","severity":1,"message":"451","line":25,"column":10,"nodeType":"400","messageId":"401","endLine":25,"endColumn":21},{"ruleId":"398","severity":1,"message":"452","line":25,"column":23,"nodeType":"400","messageId":"401","endLine":25,"endColumn":37},{"ruleId":"413","severity":1,"message":"453","line":75,"column":6,"nodeType":"415","endLine":75,"endColumn":8,"suggestions":"454"},{"ruleId":"398","severity":1,"message":"455","line":88,"column":9,"nodeType":"400","messageId":"401","endLine":88,"endColumn":13},{"ruleId":"398","severity":1,"message":"456","line":91,"column":9,"nodeType":"400","messageId":"401","endLine":91,"endColumn":21},{"ruleId":"398","severity":1,"message":"457","line":159,"column":27,"nodeType":"400","messageId":"401","endLine":159,"endColumn":33},{"ruleId":"413","severity":1,"message":"453","line":64,"column":6,"nodeType":"415","endLine":64,"endColumn":8,"suggestions":"458"},{"ruleId":"413","severity":1,"message":"414","line":34,"column":6,"nodeType":"415","endLine":34,"endColumn":8,"suggestions":"459"},{"ruleId":"413","severity":1,"message":"417","line":41,"column":6,"nodeType":"415","endLine":41,"endColumn":8,"suggestions":"460"},{"ruleId":"413","severity":1,"message":"443","line":27,"column":6,"nodeType":"415","endLine":27,"endColumn":8,"suggestions":"461"},{"ruleId":"413","severity":1,"message":"462","line":83,"column":6,"nodeType":"415","endLine":83,"endColumn":8,"suggestions":"463"},{"ruleId":"398","severity":1,"message":"464","line":174,"column":29,"nodeType":"400","messageId":"401","endLine":174,"endColumn":40},{"ruleId":"413","severity":1,"message":"414","line":34,"column":6,"nodeType":"415","endLine":34,"endColumn":8,"suggestions":"465"},{"ruleId":"413","severity":1,"message":"417","line":41,"column":6,"nodeType":"415","endLine":41,"endColumn":8,"suggestions":"466"},{"ruleId":"413","severity":1,"message":"443","line":27,"column":6,"nodeType":"415","endLine":27,"endColumn":8,"suggestions":"467"},{"ruleId":"413","severity":1,"message":"453","line":62,"column":6,"nodeType":"415","endLine":62,"endColumn":8,"suggestions":"468"},{"ruleId":"413","severity":1,"message":"414","line":34,"column":6,"nodeType":"415","endLine":34,"endColumn":8,"suggestions":"469"},{"ruleId":"413","severity":1,"message":"417","line":41,"column":6,"nodeType":"415","endLine":41,"endColumn":8,"suggestions":"470"},{"ruleId":"413","severity":1,"message":"443","line":27,"column":6,"nodeType":"415","endLine":27,"endColumn":8,"suggestions":"471"},{"ruleId":"413","severity":1,"message":"453","line":62,"column":6,"nodeType":"415","endLine":62,"endColumn":8,"suggestions":"472"},{"ruleId":"413","severity":1,"message":"414","line":34,"column":6,"nodeType":"415","endLine":34,"endColumn":8,"suggestions":"473"},{"ruleId":"413","severity":1,"message":"417","line":41,"column":6,"nodeType":"415","endLine":41,"endColumn":8,"suggestions":"474"},{"ruleId":"413","severity":1,"message":"443","line":27,"column":6,"nodeType":"415","endLine":27,"endColumn":8,"suggestions":"475"},{"ruleId":"413","severity":1,"message":"462","line":84,"column":6,"nodeType":"415","endLine":84,"endColumn":8,"suggestions":"476"},{"ruleId":"398","severity":1,"message":"464","line":176,"column":29,"nodeType":"400","messageId":"401","endLine":176,"endColumn":40},{"ruleId":"413","severity":1,"message":"414","line":34,"column":6,"nodeType":"415","endLine":34,"endColumn":8,"suggestions":"477"},{"ruleId":"413","severity":1,"message":"417","line":41,"column":6,"nodeType":"415","endLine":41,"endColumn":8,"suggestions":"478"},{"ruleId":"413","severity":1,"message":"443","line":27,"column":6,"nodeType":"415","endLine":27,"endColumn":8,"suggestions":"479"},{"ruleId":"413","severity":1,"message":"453","line":64,"column":6,"nodeType":"415","endLine":64,"endColumn":8,"suggestions":"480"},{"ruleId":"413","severity":1,"message":"414","line":34,"column":6,"nodeType":"415","endLine":34,"endColumn":8,"suggestions":"481"},{"ruleId":"413","severity":1,"message":"417","line":41,"column":6,"nodeType":"415","endLine":41,"endColumn":8,"suggestions":"482"},{"ruleId":"398","severity":1,"message":"483","line":61,"column":10,"nodeType":"400","messageId":"401","endLine":61,"endColumn":18},{"ruleId":"413","severity":1,"message":"484","line":197,"column":6,"nodeType":"415","endLine":197,"endColumn":8,"suggestions":"485"},{"ruleId":"398","severity":1,"message":"486","line":268,"column":35,"nodeType":"400","messageId":"401","endLine":268,"endColumn":43},{"ruleId":"398","severity":1,"message":"487","line":366,"column":31,"nodeType":"400","messageId":"401","endLine":366,"endColumn":44},{"ruleId":"398","severity":1,"message":"488","line":401,"column":31,"nodeType":"400","messageId":"401","endLine":401,"endColumn":43},{"ruleId":"398","severity":1,"message":"489","line":436,"column":31,"nodeType":"400","messageId":"401","endLine":436,"endColumn":37},{"ruleId":"398","severity":1,"message":"490","line":505,"column":31,"nodeType":"400","messageId":"401","endLine":505,"endColumn":40},{"ruleId":"413","severity":1,"message":"443","line":26,"column":6,"nodeType":"415","endLine":26,"endColumn":8,"suggestions":"491"},{"ruleId":"413","severity":1,"message":"414","line":34,"column":6,"nodeType":"415","endLine":34,"endColumn":8,"suggestions":"492"},{"ruleId":"413","severity":1,"message":"417","line":41,"column":6,"nodeType":"415","endLine":41,"endColumn":8,"suggestions":"493"},{"ruleId":"413","severity":1,"message":"443","line":27,"column":6,"nodeType":"415","endLine":27,"endColumn":8,"suggestions":"494"},{"ruleId":"413","severity":1,"message":"462","line":87,"column":6,"nodeType":"415","endLine":87,"endColumn":8,"suggestions":"495"},{"ruleId":"398","severity":1,"message":"457","line":193,"column":27,"nodeType":"400","messageId":"401","endLine":193,"endColumn":33},{"ruleId":"398","severity":1,"message":"464","line":223,"column":29,"nodeType":"400","messageId":"401","endLine":223,"endColumn":40},{"ruleId":"413","severity":1,"message":"414","line":34,"column":6,"nodeType":"415","endLine":34,"endColumn":8,"suggestions":"496"},{"ruleId":"413","severity":1,"message":"417","line":41,"column":6,"nodeType":"415","endLine":41,"endColumn":8,"suggestions":"497"},{"ruleId":"413","severity":1,"message":"453","line":66,"column":6,"nodeType":"415","endLine":66,"endColumn":8,"suggestions":"498"},{"ruleId":"413","severity":1,"message":"443","line":27,"column":6,"nodeType":"415","endLine":27,"endColumn":8,"suggestions":"499"},{"ruleId":"398","severity":1,"message":"500","line":11,"column":3,"nodeType":"400","messageId":"401","endLine":11,"endColumn":13},{"ruleId":"398","severity":1,"message":"501","line":12,"column":3,"nodeType":"400","messageId":"401","endLine":12,"endColumn":7},{"ruleId":"398","severity":1,"message":"502","line":15,"column":3,"nodeType":"400","messageId":"401","endLine":15,"endColumn":9},{"ruleId":"398","severity":1,"message":"503","line":17,"column":3,"nodeType":"400","messageId":"401","endLine":17,"endColumn":11},{"ruleId":"413","severity":1,"message":"414","line":35,"column":6,"nodeType":"415","endLine":35,"endColumn":8,"suggestions":"504"},{"ruleId":"413","severity":1,"message":"417","line":42,"column":6,"nodeType":"415","endLine":42,"endColumn":8,"suggestions":"505"},{"ruleId":"398","severity":1,"message":"506","line":8,"column":3,"nodeType":"400","messageId":"401","endLine":8,"endColumn":8},{"ruleId":"413","severity":1,"message":"443","line":27,"column":6,"nodeType":"415","endLine":27,"endColumn":8,"suggestions":"507"},"no-native-reassign",["508"],"no-negated-in-lhs",["509"],"no-unused-vars","'msg' is assigned a value but never used.","Identifier","unusedVar","'setMsg' is assigned a value but never used.",["508"],["509"],"'useEffect' is defined but never used.","'ListItemIcon' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["510"],"React Hook useEffect has missing dependencies: 'ctxResults' and 'fetchData'. Either include them or remove the dependency array.",["511"],"'Switch' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useToken\" is called in function \"index\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'token' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Redirect' is defined but never used.","'AdsUpsert' is defined but never used.","'CategoryUpsert' is defined but never used.","'TipUpsert' is defined but never used.","'EducationUpsert' is defined but never used.","'IndustryUpsert' is defined but never used.","'FaqUpsert' is defined but never used.","'LocationUpsert' is defined but never used.","'JobUpsert' is defined but never used.","'ServiceUpsert' is defined but never used.","'PartnerUpsert' is defined but never used.",["512"],["513"],"React Hook useCallback has missing dependencies: 'delId' and 'handleDelete'. Either include them or remove the dependency array.",["514"],["515"],["516"],["517"],"'MuiThemeProvider' is defined but never used.","'MUIRichTextEditor' is defined but never used.","'Editor' is defined but never used.","'editorState' is assigned a value but never used.","'setEditorState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'editId' and 'handleGet'. Either include them or remove the dependency array.",["518"],"'save' is assigned a value but never used.","'handleEditor' is assigned a value but never used.","'status' is assigned a value but never used.",["519"],["520"],["521"],["522"],"React Hook useEffect has missing dependencies: 'editId', 'handleCategory', and 'handleGet'. Either include them or remove the dependency array.",["523"],"'category_id' is assigned a value but never used.",["524"],["525"],["526"],["527"],["528"],["529"],["530"],["531"],["532"],["533"],["534"],["535"],["536"],["537"],["538"],["539"],["540"],["541"],"'category' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'editId', 'fetchLocation', 'handleCategory', and 'handleGet'. Either include them or remove the dependency array.",["542"],"'currency' is assigned a value but never used.","'industry_type' is assigned a value but never used.","'job_location' is assigned a value but never used.","'gender' is assigned a value but never used.","'education' is assigned a value but never used.",["543"],["544"],["545"],["546"],["547"],["548"],["549"],["550"],["551"],"'IconButton' is defined but never used.","'Menu' is defined but never used.","'Button' is defined but never used.","'MenuItem' is defined but never used.",["552"],["553"],"'Slide' is defined but never used.",["554"],"no-global-assign","no-unsafe-negation",{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"555","fix":"559"},{"desc":"557","fix":"560"},{"desc":"561","fix":"562"},{"desc":"555","fix":"563"},{"desc":"557","fix":"564"},{"desc":"561","fix":"565"},{"desc":"566","fix":"567"},{"desc":"566","fix":"568"},{"desc":"555","fix":"569"},{"desc":"557","fix":"570"},{"desc":"561","fix":"571"},{"desc":"572","fix":"573"},{"desc":"555","fix":"574"},{"desc":"557","fix":"575"},{"desc":"561","fix":"576"},{"desc":"566","fix":"577"},{"desc":"555","fix":"578"},{"desc":"557","fix":"579"},{"desc":"561","fix":"580"},{"desc":"566","fix":"581"},{"desc":"555","fix":"582"},{"desc":"557","fix":"583"},{"desc":"561","fix":"584"},{"desc":"572","fix":"585"},{"desc":"555","fix":"586"},{"desc":"557","fix":"587"},{"desc":"561","fix":"588"},{"desc":"566","fix":"589"},{"desc":"555","fix":"590"},{"desc":"557","fix":"591"},{"desc":"592","fix":"593"},{"desc":"561","fix":"594"},{"desc":"555","fix":"595"},{"desc":"557","fix":"596"},{"desc":"561","fix":"597"},{"desc":"572","fix":"598"},{"desc":"555","fix":"599"},{"desc":"557","fix":"600"},{"desc":"566","fix":"601"},{"desc":"561","fix":"602"},{"desc":"555","fix":"603"},{"desc":"557","fix":"604"},{"desc":"561","fix":"605"},"Update the dependencies array to be: [fetchData]",{"range":"606","text":"607"},"Update the dependencies array to be: [ctxResults, fetchData]",{"range":"608","text":"609"},{"range":"610","text":"607"},{"range":"611","text":"609"},"Update the dependencies array to be: [delId, handleDelete]",{"range":"612","text":"613"},{"range":"614","text":"607"},{"range":"615","text":"609"},{"range":"616","text":"613"},"Update the dependencies array to be: [editId, handleGet]",{"range":"617","text":"618"},{"range":"619","text":"618"},{"range":"620","text":"607"},{"range":"621","text":"609"},{"range":"622","text":"613"},"Update the dependencies array to be: [editId, handleCategory, handleGet]",{"range":"623","text":"624"},{"range":"625","text":"607"},{"range":"626","text":"609"},{"range":"627","text":"613"},{"range":"628","text":"618"},{"range":"629","text":"607"},{"range":"630","text":"609"},{"range":"631","text":"613"},{"range":"632","text":"618"},{"range":"633","text":"607"},{"range":"634","text":"609"},{"range":"635","text":"613"},{"range":"636","text":"624"},{"range":"637","text":"607"},{"range":"638","text":"609"},{"range":"639","text":"613"},{"range":"640","text":"618"},{"range":"641","text":"607"},{"range":"642","text":"609"},"Update the dependencies array to be: [editId, fetchLocation, handleCategory, handleGet]",{"range":"643","text":"644"},{"range":"645","text":"613"},{"range":"646","text":"607"},{"range":"647","text":"609"},{"range":"648","text":"613"},{"range":"649","text":"624"},{"range":"650","text":"607"},{"range":"651","text":"609"},{"range":"652","text":"618"},{"range":"653","text":"613"},{"range":"654","text":"607"},{"range":"655","text":"609"},{"range":"656","text":"613"},[1138,1140],"[fetchData]",[1282,1284],"[ctxResults, fetchData]",[872,874],[1039,1041],[702,704],"[delId, handleDelete]",[875,877],[1038,1040],[712,714],[2042,2044],"[editId, handleGet]",[1751,1753],[849,851],[1006,1008],[696,698],[2313,2315],"[editId, handleCategory, handleGet]",[879,881],[1042,1044],[714,716],[1721,1723],[875,877],[1038,1040],[712,714],[1748,1750],[849,851],[1006,1008],[696,698],[2346,2348],[874,876],[1036,1038],[711,713],[1787,1789],[849,851],[1006,1008],[4805,4807],"[editId, fetchLocation, handleCategory, handleGet]",[692,694],[869,871],[1030,1032],[704,706],[2408,2410],[870,872],[1031,1033],[1891,1893],[708,710],[906,908],[1067,1069],[714,716]]